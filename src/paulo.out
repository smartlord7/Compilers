Starting parse
Entering state 0
Stack now 0
Reading a token
Next token is token PACKAGE ()
Shifting token PACKAGE ()
Entering state 1
Stack now 0 1
Reading a token
Next token is token ID ()
Shifting token ID ()
Entering state 3
Stack now 0 1 3
Reading a token
Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 5
Stack now 0 1 3 5
Reading a token
Next token is token FUNC ()
Shifting token FUNC ()
Entering state 7
Stack now 0 1 3 5 7
Reading a token
Next token is token ID ()
Shifting token ID ()
Entering state 14
Stack now 0 1 3 5 7 14
Reading a token
Next token is token LPAR ()
Shifting token LPAR ()
Entering state 25
Stack now 0 1 3 5 7 14 25
Reading a token
Next token is token RPAR ()
Shifting token RPAR ()
Entering state 31
Stack now 0 1 3 5 7 14 25 31
Reading a token
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 36
Stack now 0 1 3 5 7 14 25 31 36
Reading a token
Now at end of input.
Shifting token error ()
Entering state 42
Stack now 0 1 3 5 7 14 25 31 36 42
Reducing stack by rule 50 (line 226):
   $1 = token error ()
-> $$ = nterm Statement ()
Entering state 53
Stack now 0 1 3 5 7 14 25 31 36 53
Now at end of input.
Cleanup: discarding lookahead token "end of file" ()
Stack now 0 1 3 5 7 14 25 31 36 53
Cleanup: popping nterm Statement ()
Cleanup: popping token LBRACE ()
Cleanup: popping token RPAR ()
Cleanup: popping token LPAR ()
Cleanup: popping token ID ()
Cleanup: popping token FUNC ()
Cleanup: popping token SEMICOLON ()
Cleanup: popping token ID ()
Cleanup: popping token PACKAGE ()
25
PACKAGE
40
ID("main")
1
0
0
37
FUNC
40
ID("main")
14
LPAR
23
RPAR
12
LBRACE
0
Line 4, column 1: syntax error: 
54
insucesso
