Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations
    2        | PACKAGE ID SEMICOLON

    3 Declarations: VarDeclaration SEMICOLON
    4             | VarDeclaration SEMICOLON Declarations
    5             | FuncDeclaration SEMICOLON
    6             | FuncDeclaration SEMICOLON Declarations

    7 VarDeclaration: VAR VarSpec
    8               | VAR LPAR VarSpec SEMICOLON RPAR

    9 VarSpec: ID VarSpec_1

   10 VarSpec_1: Type
   11          | COMMA ID VarSpec_1

   12 Type: INT
   13     | FLOAT32
   14     | BOOL
   15     | STRING

   16 FuncDeclaration: FUNC ID LPAR RPAR FuncBody
   17                | FUNC ID LPAR Parameters RPAR FuncBody
   18                | FUNC ID LPAR RPAR Type FuncBody
   19                | FUNC ID LPAR Parameters RPAR Type FuncBody

   20 Parameters: ID Type
   21           | ID Type Parameters_1

   22 Parameters_1: COMMA ID Type
   23             | COMMA ID Type Parameters_1

   24 FuncBody: LBRACE RBRACE
   25         | LBRACE VarsAndStatements RBRACE

   26 VarsAndStatements: SEMICOLON
   27                  | VarDeclaration SEMICOLON
   28                  | Statement SEMICOLON
   29                  | SEMICOLON VarsAndStatements
   30                  | VarDeclaration SEMICOLON VarsAndStatements
   31                  | Statement SEMICOLON VarsAndStatements

   32 Statement: ID ASSIGN Expr
   33          | LBRACE RBRACE
   34          | LBRACE Statement_1 RBRACE

   35 Statement_1: Statement SEMICOLON
   36            | Statement SEMICOLON Statement_1

   37 Statement: IF Expr LBRACE Statement_rep RBRACE OPT_ELSE

   38 OPT_ELSE: ELSE LBRACE Statement_rep RBRACE
   39         | %empty

   40 Statement_rep: %empty
   41              | Statement SEMICOLON Statement_rep

   42 Statement: FOR LBRACE Statement_rep RBRACE
   43          | FOR Expr LBRACE Statement_rep RBRACE
   44          | RETURN
   45          | RETURN Expr
   46          | FuncInvocation
   47          | ParseArgs
   48          | PRINT LPAR Expr RPAR
   49          | PRINT LPAR STRLIT RPAR
   50          | error

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   53 FuncInvocation: ID LPAR RPAR
   54               | ID LPAR Expr RPAR
   55               | ID LPAR Expr FuncInvocation_rep RPAR

   56 FuncInvocation_rep: COMMA Expr
   57                   | COMMA Expr FuncInvocation_rep

   58 FuncInvocation: ID LPAR error RPAR

   59 Expr: Expr OR Expr
   60     | Expr AND Expr
   61     | Expr LT
   62     | Expr GT
   63     | Expr LE
   64     | Expr GE
   65     | Expr EQ
   66     | Expr NE
   67     | Expr PLUS Expr
   68     | Expr MINUS Expr
   69     | Expr STAR Expr
   70     | Expr DIV Expr
   71     | Expr MOD Expr
   72     | NOT Expr
   73     | MINUS Expr
   74     | PLUS Expr
   75     | INTLIT
   76     | REALLIT
   77     | ID
   78     | FuncInvocation
   79     | LPAR Expr RPAR
   80     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 50 52 58 80
    PACKAGE <package> (258) 1 2
    ID (259) 1 2 9 11 16 17 18 19 20 21 22 23 32 51 52 53 54 55 58 77
    SEMICOLON (260) 1 2 3 4 5 6 8 26 27 28 29 30 31 35 36 41
    VAR (261) 7 8
    LPAR (262) 8 16 17 18 19 48 49 51 52 53 54 55 58 79 80
    RPAR (263) 8 16 17 18 19 48 49 51 52 53 54 55 58 79 80
    COMMA (264) 11 22 23 51 52 56 57
    INT (265) 12
    FLOAT32 (266) 13
    BOOL (267) 14
    STRING (268) 15
    RBRACE (269) 24 25 33 34 37 38 42 43
    LBRACE (270) 24 25 33 34 37 38 42 43
    ASSIGN (271) 32 51 52
    IF (272) 37
    ELSE (273) 38
    RETURN (274) 44 45
    FOR (275) 42 43
    PRINT (276) 48 49
    STRLIT (277) 49
    BLANKID (278) 51 52
    PARSEINT (279) 51 52
    CMDARGS (280) 51
    LSQ (281) 51
    RSQ (282) 51
    OR (283) 59
    AND (284) 60
    LT (285) 61
    GT (286) 62
    EQ (287) 65
    NE (288) 66
    LE (289) 63
    GE (290) 64
    PLUS (291) 67 74
    MINUS (292) 68 73
    STAR (293) 69
    DIV (294) 70
    MOD (295) 71
    NOT (296) 72
    INTLIT (297) 75
    REALLIT (298) 76
    FUNC (299) 16 17 18 19


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program <program> (46)
        on left: 1 2
        on right: 0
    Declarations (47)
        on left: 3 4 5 6
        on right: 1 4 6
    VarDeclaration (48)
        on left: 7 8
        on right: 3 4 27 30
    VarSpec (49)
        on left: 9
        on right: 7 8
    VarSpec_1 (50)
        on left: 10 11
        on right: 9 11
    Type (51)
        on left: 12 13 14 15
        on right: 10 18 19 20 21 22 23
    FuncDeclaration (52)
        on left: 16 17 18 19
        on right: 5 6
    Parameters (53)
        on left: 20 21
        on right: 17 19
    Parameters_1 (54)
        on left: 22 23
        on right: 21 23
    FuncBody (55)
        on left: 24 25
        on right: 16 17 18 19
    VarsAndStatements (56)
        on left: 26 27 28 29 30 31
        on right: 25 29 30 31
    Statement (57)
        on left: 32 33 34 37 42 43 44 45 46 47 48 49 50
        on right: 28 31 35 36 41
    Statement_1 (58)
        on left: 35 36
        on right: 34 36
    OPT_ELSE (59)
        on left: 38 39
        on right: 37
    Statement_rep (60)
        on left: 40 41
        on right: 37 38 41 42 43
    ParseArgs (61)
        on left: 51 52
        on right: 47
    FuncInvocation (62)
        on left: 53 54 55 58
        on right: 46 78
    FuncInvocation_rep (63)
        on left: 56 57
        on right: 55 57
    Expr (64)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 32 37 43 45 48 51 54 55 56 57 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 79


State 0

    0 $accept: • Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE • ID SEMICOLON Declarations
    2        | PACKAGE • ID SEMICOLON

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID • SEMICOLON Declarations
    2        | PACKAGE ID • SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON • Declarations
    2        | PACKAGE ID SEMICOLON •

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 2 (Program)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    7 VarDeclaration: VAR • VarSpec
    8               | VAR • LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 7

   16 FuncDeclaration: FUNC • ID LPAR RPAR FuncBody
   17                | FUNC • ID LPAR Parameters RPAR FuncBody
   18                | FUNC • ID LPAR RPAR Type FuncBody
   19                | FUNC • ID LPAR Parameters RPAR Type FuncBody

    ID  shift, and go to state 14


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations •

    $default  reduce using rule 1 (Program)


State 9

    3 Declarations: VarDeclaration • SEMICOLON
    4             | VarDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 10

    5 Declarations: FuncDeclaration • SEMICOLON
    6             | FuncDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    9 VarSpec: ID • VarSpec_1

    COMMA    shift, and go to state 17
    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    VarSpec_1  go to state 22
    Type       go to state 23


State 12

    8 VarDeclaration: VAR LPAR • VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 24


State 13

    7 VarDeclaration: VAR VarSpec •

    $default  reduce using rule 7 (VarDeclaration)


State 14

   16 FuncDeclaration: FUNC ID • LPAR RPAR FuncBody
   17                | FUNC ID • LPAR Parameters RPAR FuncBody
   18                | FUNC ID • LPAR RPAR Type FuncBody
   19                | FUNC ID • LPAR Parameters RPAR Type FuncBody

    LPAR  shift, and go to state 25


State 15

    3 Declarations: VarDeclaration SEMICOLON •
    4             | VarDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    Declarations     go to state 26
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 16

    5 Declarations: FuncDeclaration SEMICOLON •
    6             | FuncDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 5 (Declarations)

    Declarations     go to state 27
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

   11 VarSpec_1: COMMA • ID VarSpec_1

    ID  shift, and go to state 28


State 18

   12 Type: INT •

    $default  reduce using rule 12 (Type)


State 19

   13 Type: FLOAT32 •

    $default  reduce using rule 13 (Type)


State 20

   14 Type: BOOL •

    $default  reduce using rule 14 (Type)


State 21

   15 Type: STRING •

    $default  reduce using rule 15 (Type)


State 22

    9 VarSpec: ID VarSpec_1 •

    $default  reduce using rule 9 (VarSpec)


State 23

   10 VarSpec_1: Type •

    $default  reduce using rule 10 (VarSpec_1)


State 24

    8 VarDeclaration: VAR LPAR VarSpec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 25

   16 FuncDeclaration: FUNC ID LPAR • RPAR FuncBody
   17                | FUNC ID LPAR • Parameters RPAR FuncBody
   18                | FUNC ID LPAR • RPAR Type FuncBody
   19                | FUNC ID LPAR • Parameters RPAR Type FuncBody

    ID    shift, and go to state 30
    RPAR  shift, and go to state 31

    Parameters  go to state 32


State 26

    4 Declarations: VarDeclaration SEMICOLON Declarations •

    $default  reduce using rule 4 (Declarations)


State 27

    6 Declarations: FuncDeclaration SEMICOLON Declarations •

    $default  reduce using rule 6 (Declarations)


State 28

   11 VarSpec_1: COMMA ID • VarSpec_1

    COMMA    shift, and go to state 17
    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    VarSpec_1  go to state 33
    Type       go to state 23


State 29

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON • RPAR

    RPAR  shift, and go to state 34


State 30

   20 Parameters: ID • Type
   21           | ID • Type Parameters_1

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    Type  go to state 35


State 31

   16 FuncDeclaration: FUNC ID LPAR RPAR • FuncBody
   18                | FUNC ID LPAR RPAR • Type FuncBody

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21
    LBRACE   shift, and go to state 36

    Type      go to state 37
    FuncBody  go to state 38


State 32

   17 FuncDeclaration: FUNC ID LPAR Parameters • RPAR FuncBody
   19                | FUNC ID LPAR Parameters • RPAR Type FuncBody

    RPAR  shift, and go to state 39


State 33

   11 VarSpec_1: COMMA ID VarSpec_1 •

    $default  reduce using rule 11 (VarSpec_1)


State 34

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR •

    $default  reduce using rule 8 (VarDeclaration)


State 35

   20 Parameters: ID Type •
   21           | ID Type • Parameters_1

    COMMA  shift, and go to state 40

    $default  reduce using rule 20 (Parameters)

    Parameters_1  go to state 41


State 36

   24 FuncBody: LBRACE • RBRACE
   25         | LBRACE • VarsAndStatements RBRACE

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    VAR        shift, and go to state 6
    RBRACE     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    VarDeclaration     go to state 51
    VarsAndStatements  go to state 52
    Statement          go to state 53
    ParseArgs          go to state 54
    FuncInvocation     go to state 55


State 37

   18 FuncDeclaration: FUNC ID LPAR RPAR Type • FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 56


State 38

   16 FuncDeclaration: FUNC ID LPAR RPAR FuncBody •

    $default  reduce using rule 16 (FuncDeclaration)


State 39

   17 FuncDeclaration: FUNC ID LPAR Parameters RPAR • FuncBody
   19                | FUNC ID LPAR Parameters RPAR • Type FuncBody

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21
    LBRACE   shift, and go to state 36

    Type      go to state 57
    FuncBody  go to state 58


State 40

   22 Parameters_1: COMMA • ID Type
   23             | COMMA • ID Type Parameters_1

    ID  shift, and go to state 59


State 41

   21 Parameters: ID Type Parameters_1 •

    $default  reduce using rule 21 (Parameters)


State 42

   50 Statement: error •

    $default  reduce using rule 50 (Statement)


State 43

   32 Statement: ID • ASSIGN Expr
   51 ParseArgs: ID • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID • COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   53 FuncInvocation: ID • LPAR RPAR
   54               | ID • LPAR Expr RPAR
   55               | ID • LPAR Expr FuncInvocation_rep RPAR
   58               | ID • LPAR error RPAR

    LPAR    shift, and go to state 60
    COMMA   shift, and go to state 61
    ASSIGN  shift, and go to state 62


State 44

   26 VarsAndStatements: SEMICOLON •
   29                  | SEMICOLON • VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    RBRACE  reduce using rule 26 (VarsAndStatements)

    VarDeclaration     go to state 51
    VarsAndStatements  go to state 63
    Statement          go to state 53
    ParseArgs          go to state 54
    FuncInvocation     go to state 55


State 45

   24 FuncBody: LBRACE RBRACE •

    $default  reduce using rule 24 (FuncBody)


State 46

   33 Statement: LBRACE • RBRACE
   34          | LBRACE • Statement_1 RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 64
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 65
    Statement_1     go to state 66
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 47

   37 Statement: IF • Expr LBRACE Statement_rep RBRACE OPT_ELSE

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 75


State 48

   44 Statement: RETURN •
   45          | RETURN • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    $default  reduce using rule 44 (Statement)

    FuncInvocation  go to state 74
    Expr            go to state 76


State 49

   42 Statement: FOR • LBRACE Statement_rep RBRACE
   43          | FOR • Expr LBRACE Statement_rep RBRACE

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    LBRACE   shift, and go to state 77
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 78


State 50

   48 Statement: PRINT • LPAR Expr RPAR
   49          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 79


State 51

   27 VarsAndStatements: VarDeclaration • SEMICOLON
   30                  | VarDeclaration • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 80


State 52

   25 FuncBody: LBRACE VarsAndStatements • RBRACE

    RBRACE  shift, and go to state 81


State 53

   28 VarsAndStatements: Statement • SEMICOLON
   31                  | Statement • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 82


State 54

   47 Statement: ParseArgs •

    $default  reduce using rule 47 (Statement)


State 55

   46 Statement: FuncInvocation •

    $default  reduce using rule 46 (Statement)


State 56

   18 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody •

    $default  reduce using rule 18 (FuncDeclaration)


State 57

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type • FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 83


State 58

   17 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody •

    $default  reduce using rule 17 (FuncDeclaration)


State 59

   22 Parameters_1: COMMA ID • Type
   23             | COMMA ID • Type Parameters_1

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    Type  go to state 84


State 60

   53 FuncInvocation: ID LPAR • RPAR
   54               | ID LPAR • Expr RPAR
   55               | ID LPAR • Expr FuncInvocation_rep RPAR
   58               | ID LPAR • error RPAR

    error    shift, and go to state 85
    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    RPAR     shift, and go to state 86
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 87


State 61

   51 ParseArgs: ID COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA • BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 88


State 62

   32 Statement: ID ASSIGN • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 89


State 63

   29 VarsAndStatements: SEMICOLON VarsAndStatements •

    $default  reduce using rule 29 (VarsAndStatements)


State 64

   33 Statement: LBRACE RBRACE •

    $default  reduce using rule 33 (Statement)


State 65

   35 Statement_1: Statement • SEMICOLON
   36            | Statement • SEMICOLON Statement_1

    SEMICOLON  shift, and go to state 90


State 66

   34 Statement: LBRACE Statement_1 • RBRACE

    RBRACE  shift, and go to state 91


State 67

   53 FuncInvocation: ID • LPAR RPAR
   54               | ID • LPAR Expr RPAR
   55               | ID • LPAR Expr FuncInvocation_rep RPAR
   58               | ID • LPAR error RPAR
   77 Expr: ID •

    LPAR  shift, and go to state 60

    $default  reduce using rule 77 (Expr)


State 68

   79 Expr: LPAR • Expr RPAR
   80     | LPAR • error RPAR

    error    shift, and go to state 92
    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 93


State 69

   74 Expr: PLUS • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 94


State 70

   73 Expr: MINUS • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 95


State 71

   72 Expr: NOT • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 96


State 72

   75 Expr: INTLIT •

    $default  reduce using rule 75 (Expr)


State 73

   76 Expr: REALLIT •

    $default  reduce using rule 76 (Expr)


State 74

   78 Expr: FuncInvocation •

    $default  reduce using rule 78 (Expr)


State 75

   37 Statement: IF Expr • LBRACE Statement_rep RBRACE OPT_ELSE
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    LBRACE  shift, and go to state 97
    OR      shift, and go to state 98
    AND     shift, and go to state 99
    LT      shift, and go to state 100
    GT      shift, and go to state 101
    EQ      shift, and go to state 102
    NE      shift, and go to state 103
    LE      shift, and go to state 104
    GE      shift, and go to state 105
    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110


State 76

   45 Statement: RETURN Expr •
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 45 (Statement)


State 77

   42 Statement: FOR LBRACE • Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 40 (Statement_rep)

    Statement       go to state 111
    Statement_rep   go to state 112
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 78

   43 Statement: FOR Expr • LBRACE Statement_rep RBRACE
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    LBRACE  shift, and go to state 113
    OR      shift, and go to state 98
    AND     shift, and go to state 99
    LT      shift, and go to state 100
    GT      shift, and go to state 101
    EQ      shift, and go to state 102
    NE      shift, and go to state 103
    LE      shift, and go to state 104
    GE      shift, and go to state 105
    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110


State 79

   48 Statement: PRINT LPAR • Expr RPAR
   49          | PRINT LPAR • STRLIT RPAR

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    STRLIT   shift, and go to state 114
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 115


State 80

   27 VarsAndStatements: VarDeclaration SEMICOLON •
   30                  | VarDeclaration SEMICOLON • VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    RBRACE  reduce using rule 27 (VarsAndStatements)

    VarDeclaration     go to state 51
    VarsAndStatements  go to state 116
    Statement          go to state 53
    ParseArgs          go to state 54
    FuncInvocation     go to state 55


State 81

   25 FuncBody: LBRACE VarsAndStatements RBRACE •

    $default  reduce using rule 25 (FuncBody)


State 82

   28 VarsAndStatements: Statement SEMICOLON •
   31                  | Statement SEMICOLON • VarsAndStatements

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    RBRACE  reduce using rule 28 (VarsAndStatements)

    VarDeclaration     go to state 51
    VarsAndStatements  go to state 117
    Statement          go to state 53
    ParseArgs          go to state 54
    FuncInvocation     go to state 55


State 83

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody •

    $default  reduce using rule 19 (FuncDeclaration)


State 84

   22 Parameters_1: COMMA ID Type •
   23             | COMMA ID Type • Parameters_1

    COMMA  shift, and go to state 40

    $default  reduce using rule 22 (Parameters_1)

    Parameters_1  go to state 118


State 85

   58 FuncInvocation: ID LPAR error • RPAR

    RPAR  shift, and go to state 119


State 86

   53 FuncInvocation: ID LPAR RPAR •

    $default  reduce using rule 53 (FuncInvocation)


State 87

   54 FuncInvocation: ID LPAR Expr • RPAR
   55               | ID LPAR Expr • FuncInvocation_rep RPAR
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    RPAR   shift, and go to state 120
    COMMA  shift, and go to state 121
    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    FuncInvocation_rep  go to state 122


State 88

   51 ParseArgs: ID COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA BLANKID • ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 123


State 89

   32 Statement: ID ASSIGN Expr •
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 32 (Statement)


State 90

   35 Statement_1: Statement SEMICOLON •
   36            | Statement SEMICOLON • Statement_1

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 35 (Statement_1)

    Statement       go to state 65
    Statement_1     go to state 124
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 91

   34 Statement: LBRACE Statement_1 RBRACE •

    $default  reduce using rule 34 (Statement)


State 92

   80 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 125


State 93

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr
   79     | LPAR Expr • RPAR

    RPAR   shift, and go to state 126
    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110


State 94

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr
   74     | PLUS Expr •

    $default  reduce using rule 74 (Expr)


State 95

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr
   73     | MINUS Expr •

    $default  reduce using rule 73 (Expr)


State 96

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr
   72     | NOT Expr •

    $default  reduce using rule 72 (Expr)


State 97

   37 Statement: IF Expr LBRACE • Statement_rep RBRACE OPT_ELSE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 40 (Statement_rep)

    Statement       go to state 111
    Statement_rep   go to state 127
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 98

   59 Expr: Expr OR • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 128


State 99

   60 Expr: Expr AND • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 129


State 100

   61 Expr: Expr LT •

    $default  reduce using rule 61 (Expr)


State 101

   62 Expr: Expr GT •

    $default  reduce using rule 62 (Expr)


State 102

   65 Expr: Expr EQ •

    $default  reduce using rule 65 (Expr)


State 103

   66 Expr: Expr NE •

    $default  reduce using rule 66 (Expr)


State 104

   63 Expr: Expr LE •

    $default  reduce using rule 63 (Expr)


State 105

   64 Expr: Expr GE •

    $default  reduce using rule 64 (Expr)


State 106

   67 Expr: Expr PLUS • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 130


State 107

   68 Expr: Expr MINUS • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 131


State 108

   69 Expr: Expr STAR • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 132


State 109

   70 Expr: Expr DIV • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 133


State 110

   71 Expr: Expr MOD • Expr

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 134


State 111

   41 Statement_rep: Statement • SEMICOLON Statement_rep

    SEMICOLON  shift, and go to state 135


State 112

   42 Statement: FOR LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 136


State 113

   43 Statement: FOR Expr LBRACE • Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 40 (Statement_rep)

    Statement       go to state 111
    Statement_rep   go to state 137
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 114

   49 Statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 138


State 115

   48 Statement: PRINT LPAR Expr • RPAR
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    RPAR   shift, and go to state 139
    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110


State 116

   30 VarsAndStatements: VarDeclaration SEMICOLON VarsAndStatements •

    $default  reduce using rule 30 (VarsAndStatements)


State 117

   31 VarsAndStatements: Statement SEMICOLON VarsAndStatements •

    $default  reduce using rule 31 (VarsAndStatements)


State 118

   23 Parameters_1: COMMA ID Type Parameters_1 •

    $default  reduce using rule 23 (Parameters_1)


State 119

   58 FuncInvocation: ID LPAR error RPAR •

    $default  reduce using rule 58 (FuncInvocation)


State 120

   54 FuncInvocation: ID LPAR Expr RPAR •

    $default  reduce using rule 54 (FuncInvocation)


State 121

   56 FuncInvocation_rep: COMMA • Expr
   57                   | COMMA • Expr FuncInvocation_rep

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 140


State 122

   55 FuncInvocation: ID LPAR Expr FuncInvocation_rep • RPAR

    RPAR  shift, and go to state 141


State 123

   51 ParseArgs: ID COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA BLANKID ASSIGN • PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 142


State 124

   36 Statement_1: Statement SEMICOLON Statement_1 •

    $default  reduce using rule 36 (Statement_1)


State 125

   80 Expr: LPAR error RPAR •

    $default  reduce using rule 80 (Expr)


State 126

   79 Expr: LPAR Expr RPAR •

    $default  reduce using rule 79 (Expr)


State 127

   37 Statement: IF Expr LBRACE Statement_rep • RBRACE OPT_ELSE

    RBRACE  shift, and go to state 143


State 128

   59 Expr: Expr • OR Expr
   59     | Expr OR Expr •
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 59 (Expr)


State 129

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   60     | Expr AND Expr •
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 60 (Expr)


State 130

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   67     | Expr PLUS Expr •
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    STAR  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 67 (Expr)


State 131

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   68     | Expr MINUS Expr •
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    STAR  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 68 (Expr)


State 132

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   69     | Expr STAR Expr •
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    $default  reduce using rule 69 (Expr)


State 133

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   70     | Expr DIV Expr •
   71     | Expr • MOD Expr

    $default  reduce using rule 70 (Expr)


State 134

   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr
   71     | Expr MOD Expr •

    $default  reduce using rule 71 (Expr)


State 135

   41 Statement_rep: Statement SEMICOLON • Statement_rep

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 40 (Statement_rep)

    Statement       go to state 111
    Statement_rep   go to state 144
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 136

   42 Statement: FOR LBRACE Statement_rep RBRACE •

    $default  reduce using rule 42 (Statement)


State 137

   43 Statement: FOR Expr LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 145


State 138

   49 Statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 49 (Statement)


State 139

   48 Statement: PRINT LPAR Expr RPAR •

    $default  reduce using rule 48 (Statement)


State 140

   56 FuncInvocation_rep: COMMA Expr •
   57                   | COMMA Expr • FuncInvocation_rep
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    COMMA  shift, and go to state 121
    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 56 (FuncInvocation_rep)

    FuncInvocation_rep  go to state 146


State 141

   55 FuncInvocation: ID LPAR Expr FuncInvocation_rep RPAR •

    $default  reduce using rule 55 (FuncInvocation)


State 142

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA BLANKID ASSIGN PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 147


State 143

   37 Statement: IF Expr LBRACE Statement_rep RBRACE • OPT_ELSE

    ELSE  shift, and go to state 148

    $default  reduce using rule 39 (OPT_ELSE)

    OPT_ELSE  go to state 149


State 144

   41 Statement_rep: Statement SEMICOLON Statement_rep •

    $default  reduce using rule 41 (Statement_rep)


State 145

   43 Statement: FOR Expr LBRACE Statement_rep RBRACE •

    $default  reduce using rule 43 (Statement)


State 146

   57 FuncInvocation_rep: COMMA Expr FuncInvocation_rep •

    $default  reduce using rule 57 (FuncInvocation_rep)


State 147

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ Expr RSQ RPAR
   52          | ID COMMA BLANKID ASSIGN PARSEINT LPAR • error RPAR

    error    shift, and go to state 150
    CMDARGS  shift, and go to state 151


State 148

   38 OPT_ELSE: ELSE • LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 152


State 149

   37 Statement: IF Expr LBRACE Statement_rep RBRACE OPT_ELSE •

    $default  reduce using rule 37 (Statement)


State 150

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 153


State 151

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 154


State 152

   38 OPT_ELSE: ELSE LBRACE • Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 40 (Statement_rep)

    Statement       go to state 111
    Statement_rep   go to state 155
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 153

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR •

    $default  reduce using rule 52 (ParseArgs)


State 154

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • Expr RSQ RPAR

    ID       shift, and go to state 67
    LPAR     shift, and go to state 68
    PLUS     shift, and go to state 69
    MINUS    shift, and go to state 70
    NOT      shift, and go to state 71
    INTLIT   shift, and go to state 72
    REALLIT  shift, and go to state 73

    FuncInvocation  go to state 74
    Expr            go to state 156


State 155

   38 OPT_ELSE: ELSE LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 157


State 156

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr • RSQ RPAR
   59 Expr: Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • LT
   62     | Expr • GT
   63     | Expr • LE
   64     | Expr • GE
   65     | Expr • EQ
   66     | Expr • NE
   67     | Expr • PLUS Expr
   68     | Expr • MINUS Expr
   69     | Expr • STAR Expr
   70     | Expr • DIV Expr
   71     | Expr • MOD Expr

    RSQ    shift, and go to state 158
    OR     shift, and go to state 98
    AND    shift, and go to state 99
    LT     shift, and go to state 100
    GT     shift, and go to state 101
    EQ     shift, and go to state 102
    NE     shift, and go to state 103
    LE     shift, and go to state 104
    GE     shift, and go to state 105
    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110


State 157

   38 OPT_ELSE: ELSE LBRACE Statement_rep RBRACE •

    $default  reduce using rule 38 (OPT_ELSE)


State 158

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 159


State 159

   51 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR •

    $default  reduce using rule 51 (ParseArgs)
