Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | %empty

    5 VarDeclaration: VAR VarDeclaration_1

    6 VarSpec: ID VarSpec_1

    7 VarDeclaration_1: VarSpec
    8                 | LPAR VarSpec SEMICOLON RPAR

    9 VarSpec_1: Type
   10          | COMMA ID VarSpec_1

   11 Type: INT
   12     | FLOAT32
   13     | BOOL
   14     | STRING

   15 FuncDeclaration: FUNC ID LPAR FuncDeclaration_1

   16 FuncDeclaration_1: RPAR FuncDeclaration_2
   17                  | Parameters RPAR FuncDeclaration_2

   18 FuncDeclaration_2: FuncBody
   19                  | Type FuncBody

   20 Parameters: ID Type
   21           | ID Type Parameters_1

   22 Parameters_1: COMMA ID Type
   23             | COMMA ID Type Parameters_1

   24 FuncBody: LBRACE RBRACE
   25         | LBRACE VarsAndStatements RBRACE

   26 VarsAndStatements: SEMICOLON
   27                  | VarDeclaration SEMICOLON
   28                  | Statement SEMICOLON
   29                  | SEMICOLON VarsAndStatements
   30                  | VarDeclaration SEMICOLON VarsAndStatements
   31                  | Statement SEMICOLON VarsAndStatements

   32 Statement: ID ASSIGN Expr
   33          | LBRACE RBRACE
   34          | LBRACE Statement_1 RBRACE

   35 Statement_1: Statement SEMICOLON
   36            | Statement SEMICOLON Statement_1

   37 Statement: IF Expr LBRACE RBRACE
   38          | IF Expr LBRACE Statement_rep RBRACE
   39          | IF Expr LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

   43 Statement_rep: Statement SEMICOLON

   44 Statement: FOR LBRACE RBRACE
   45          | FOR LBRACE Statement_rep RBRACE
   46          | FOR Expr LBRACE RBRACE
   47          | FOR Expr LBRACE Statement_rep RBRACE
   48          | RETURN
   49          | RETURN Expr
   50          | FuncInvocation
   51          | ParseArgs
   52          | PRINT LPAR Expr RPAR
   53          | PRINT LPAR STRLIT RPAR

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

   55 FuncInvocation: ID LPAR RPAR
   56               | ID LPAR Expr RPAR
   57               | ID LPAR Expr FuncInvocation_rep RPAR

   58 FuncInvocation_rep: COMMA Expr
   59                   | COMMA Expr FuncInvocation_rep

   60 Expr: Expr OR Expr
   61     | Expr AND Expr
   62     | Expr LT
   63     | Expr GT
   64     | Expr LE
   65     | Expr GE
   66     | Expr EQ
   67     | Expr NE
   68     | Expr PLUS Expr
   69     | Expr MINUS Expr
   70     | Expr STAR Expr
   71     | Expr DIV Expr
   72     | Expr MOD Expr
   73     | NOT Expr
   74     | MINUS Expr
   75     | PLUS Expr
   76     | INTLIT
   77     | REALLIT
   78     | ID
   79     | FuncInvocation
   80     | LPAR Expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PACKAGE (258) 1
    ID (259) 1 6 10 15 20 21 22 23 32 54 55 56 57 78
    SEMICOLON (260) 1 2 3 8 26 27 28 29 30 31 35 36 43
    VAR (261) 5
    LPAR (262) 8 15 52 53 54 55 56 57 80
    RPAR (263) 8 16 17 52 53 54 55 56 57 80
    COMMA (264) 10 22 23 54 58 59
    INT (265) 11
    FLOAT32 (266) 12
    BOOL (267) 13
    STRING (268) 14
    RBRACE (269) 24 25 33 34 37 38 39 40 41 42 44 45 46 47
    LBRACE (270) 24 25 33 34 37 38 39 40 41 42 44 45 46 47
    ASSIGN (271) 32 54
    IF (272) 37 38 39 40 41 42
    ELSE (273) 39 40 41 42
    RETURN (274) 48 49
    FOR (275) 44 45 46 47
    PRINT (276) 52 53
    STRLIT (277) 53
    BLANKID (278) 54
    PARSEINT (279) 54
    CMDARGS (280) 54
    LSQ (281) 54
    RSQ (282) 54
    OR (283) 60
    AND (284) 61
    LT (285) 62
    GT (286) 63
    EQ (287) 66
    NE (288) 67
    LE (289) 64
    GE (290) 65
    PLUS (291) 68 75
    MINUS (292) 69 74
    STAR (293) 70
    DIV (294) 71
    MOD (295) 72
    NOT (296) 73
    INTLIT (297) 76
    REALLIT (298) 77
    FUNC (299) 15


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program (46)
        on left: 1
        on right: 0
    Declarations (47)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration (48)
        on left: 5
        on right: 2 27 30
    VarSpec (49)
        on left: 6
        on right: 7 8
    VarDeclaration_1 (50)
        on left: 7 8
        on right: 5
    VarSpec_1 (51)
        on left: 9 10
        on right: 6 10
    Type (52)
        on left: 11 12 13 14
        on right: 9 19 20 21 22 23
    FuncDeclaration (53)
        on left: 15
        on right: 3
    FuncDeclaration_1 (54)
        on left: 16 17
        on right: 15
    FuncDeclaration_2 (55)
        on left: 18 19
        on right: 16 17
    Parameters (56)
        on left: 20 21
        on right: 17
    Parameters_1 (57)
        on left: 22 23
        on right: 21 23
    FuncBody (58)
        on left: 24 25
        on right: 18 19
    VarsAndStatements (59)
        on left: 26 27 28 29 30 31
        on right: 25 29 30 31
    Statement (60)
        on left: 32 33 34 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53
        on right: 28 31 35 36 43
    Statement_1 (61)
        on left: 35 36
        on right: 34 36
    Statement_rep (62)
        on left: 43
        on right: 38 40 41 42 45 47
    ParseArgs (63)
        on left: 54
        on right: 51
    FuncInvocation (64)
        on left: 55 56 57
        on right: 50 79
    FuncInvocation_rep (65)
        on left: 58 59
        on right: 57 59
    Expr (66)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 32 37 38 39 40 41 42 46 47 49 52 54 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 80


State 0

    0 $accept: • Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE • ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    5 VarDeclaration: VAR • VarDeclaration_1

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec           go to state 13
    VarDeclaration_1  go to state 14


State 7

   15 FuncDeclaration: FUNC • ID LPAR FuncDeclaration_1

    ID  shift, and go to state 15


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations •

    $default  reduce using rule 1 (Program)


State 9

    2 Declarations: VarDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 10

    3 Declarations: FuncDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 17


State 11

    6 VarSpec: ID • VarSpec_1

    COMMA    shift, and go to state 18
    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    VarSpec_1  go to state 23
    Type       go to state 24


State 12

    8 VarDeclaration_1: LPAR • VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 25


State 13

    7 VarDeclaration_1: VarSpec •

    $default  reduce using rule 7 (VarDeclaration_1)


State 14

    5 VarDeclaration: VAR VarDeclaration_1 •

    $default  reduce using rule 5 (VarDeclaration)


State 15

   15 FuncDeclaration: FUNC ID • LPAR FuncDeclaration_1

    LPAR  shift, and go to state 26


State 16

    2 Declarations: VarDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 27
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

    3 Declarations: FuncDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 28
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 18

   10 VarSpec_1: COMMA • ID VarSpec_1

    ID  shift, and go to state 29


State 19

   11 Type: INT •

    $default  reduce using rule 11 (Type)


State 20

   12 Type: FLOAT32 •

    $default  reduce using rule 12 (Type)


State 21

   13 Type: BOOL •

    $default  reduce using rule 13 (Type)


State 22

   14 Type: STRING •

    $default  reduce using rule 14 (Type)


State 23

    6 VarSpec: ID VarSpec_1 •

    $default  reduce using rule 6 (VarSpec)


State 24

    9 VarSpec_1: Type •

    $default  reduce using rule 9 (VarSpec_1)


State 25

    8 VarDeclaration_1: LPAR VarSpec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 30


State 26

   15 FuncDeclaration: FUNC ID LPAR • FuncDeclaration_1

    ID    shift, and go to state 31
    RPAR  shift, and go to state 32

    FuncDeclaration_1  go to state 33
    Parameters         go to state 34


State 27

    2 Declarations: VarDeclaration SEMICOLON Declarations •

    $default  reduce using rule 2 (Declarations)


State 28

    3 Declarations: FuncDeclaration SEMICOLON Declarations •

    $default  reduce using rule 3 (Declarations)


State 29

   10 VarSpec_1: COMMA ID • VarSpec_1

    COMMA    shift, and go to state 18
    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    VarSpec_1  go to state 35
    Type       go to state 24


State 30

    8 VarDeclaration_1: LPAR VarSpec SEMICOLON • RPAR

    RPAR  shift, and go to state 36


State 31

   20 Parameters: ID • Type
   21           | ID • Type Parameters_1

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    Type  go to state 37


State 32

   16 FuncDeclaration_1: RPAR • FuncDeclaration_2

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22
    LBRACE   shift, and go to state 38

    Type               go to state 39
    FuncDeclaration_2  go to state 40
    FuncBody           go to state 41


State 33

   15 FuncDeclaration: FUNC ID LPAR FuncDeclaration_1 •

    $default  reduce using rule 15 (FuncDeclaration)


State 34

   17 FuncDeclaration_1: Parameters • RPAR FuncDeclaration_2

    RPAR  shift, and go to state 42


State 35

   10 VarSpec_1: COMMA ID VarSpec_1 •

    $default  reduce using rule 10 (VarSpec_1)


State 36

    8 VarDeclaration_1: LPAR VarSpec SEMICOLON RPAR •

    $default  reduce using rule 8 (VarDeclaration_1)


State 37

   20 Parameters: ID Type •
   21           | ID Type • Parameters_1

    COMMA  shift, and go to state 43

    $default  reduce using rule 20 (Parameters)

    Parameters_1  go to state 44


State 38

   24 FuncBody: LBRACE • RBRACE
   25         | LBRACE • VarsAndStatements RBRACE

    ID         shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    VAR        shift, and go to state 6
    RBRACE     shift, and go to state 47
    LBRACE     shift, and go to state 48
    IF         shift, and go to state 49
    RETURN     shift, and go to state 50
    FOR        shift, and go to state 51
    PRINT      shift, and go to state 52

    VarDeclaration     go to state 53
    VarsAndStatements  go to state 54
    Statement          go to state 55
    ParseArgs          go to state 56
    FuncInvocation     go to state 57


State 39

   19 FuncDeclaration_2: Type • FuncBody

    LBRACE  shift, and go to state 38

    FuncBody  go to state 58


State 40

   16 FuncDeclaration_1: RPAR FuncDeclaration_2 •

    $default  reduce using rule 16 (FuncDeclaration_1)


State 41

   18 FuncDeclaration_2: FuncBody •

    $default  reduce using rule 18 (FuncDeclaration_2)


State 42

   17 FuncDeclaration_1: Parameters RPAR • FuncDeclaration_2

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22
    LBRACE   shift, and go to state 38

    Type               go to state 39
    FuncDeclaration_2  go to state 59
    FuncBody           go to state 41


State 43

   22 Parameters_1: COMMA • ID Type
   23             | COMMA • ID Type Parameters_1

    ID  shift, and go to state 60


State 44

   21 Parameters: ID Type Parameters_1 •

    $default  reduce using rule 21 (Parameters)


State 45

   32 Statement: ID • ASSIGN Expr
   54 ParseArgs: ID • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   55 FuncInvocation: ID • LPAR RPAR
   56               | ID • LPAR Expr RPAR
   57               | ID • LPAR Expr FuncInvocation_rep RPAR

    LPAR    shift, and go to state 61
    COMMA   shift, and go to state 62
    ASSIGN  shift, and go to state 63


State 46

   26 VarsAndStatements: SEMICOLON •
   29                  | SEMICOLON • VarsAndStatements

    ID         shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 48
    IF         shift, and go to state 49
    RETURN     shift, and go to state 50
    FOR        shift, and go to state 51
    PRINT      shift, and go to state 52

    $default  reduce using rule 26 (VarsAndStatements)

    VarDeclaration     go to state 53
    VarsAndStatements  go to state 64
    Statement          go to state 55
    ParseArgs          go to state 56
    FuncInvocation     go to state 57


State 47

   24 FuncBody: LBRACE RBRACE •

    $default  reduce using rule 24 (FuncBody)


State 48

   33 Statement: LBRACE • RBRACE
   34          | LBRACE • Statement_1 RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 65
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 66
    Statement_1     go to state 67
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 49

   37 Statement: IF • Expr LBRACE RBRACE
   38          | IF • Expr LBRACE Statement_rep RBRACE
   39          | IF • Expr LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF • Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF • Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF • Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 76


State 50

   48 Statement: RETURN •
   49          | RETURN • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    $default  reduce using rule 48 (Statement)

    FuncInvocation  go to state 75
    Expr            go to state 77


State 51

   44 Statement: FOR • LBRACE RBRACE
   45          | FOR • LBRACE Statement_rep RBRACE
   46          | FOR • Expr LBRACE RBRACE
   47          | FOR • Expr LBRACE Statement_rep RBRACE

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    LBRACE   shift, and go to state 78
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 79


State 52

   52 Statement: PRINT • LPAR Expr RPAR
   53          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 80


State 53

   27 VarsAndStatements: VarDeclaration • SEMICOLON
   30                  | VarDeclaration • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 81


State 54

   25 FuncBody: LBRACE VarsAndStatements • RBRACE

    RBRACE  shift, and go to state 82


State 55

   28 VarsAndStatements: Statement • SEMICOLON
   31                  | Statement • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 83


State 56

   51 Statement: ParseArgs •

    $default  reduce using rule 51 (Statement)


State 57

   50 Statement: FuncInvocation •

    $default  reduce using rule 50 (Statement)


State 58

   19 FuncDeclaration_2: Type FuncBody •

    $default  reduce using rule 19 (FuncDeclaration_2)


State 59

   17 FuncDeclaration_1: Parameters RPAR FuncDeclaration_2 •

    $default  reduce using rule 17 (FuncDeclaration_1)


State 60

   22 Parameters_1: COMMA ID • Type
   23             | COMMA ID • Type Parameters_1

    INT      shift, and go to state 19
    FLOAT32  shift, and go to state 20
    BOOL     shift, and go to state 21
    STRING   shift, and go to state 22

    Type  go to state 84


State 61

   55 FuncInvocation: ID LPAR • RPAR
   56               | ID LPAR • Expr RPAR
   57               | ID LPAR • Expr FuncInvocation_rep RPAR

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    RPAR     shift, and go to state 85
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 86


State 62

   54 ParseArgs: ID COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    BLANKID  shift, and go to state 87


State 63

   32 Statement: ID ASSIGN • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 88


State 64

   29 VarsAndStatements: SEMICOLON VarsAndStatements •

    $default  reduce using rule 29 (VarsAndStatements)


State 65

   33 Statement: LBRACE RBRACE •

    $default  reduce using rule 33 (Statement)


State 66

   35 Statement_1: Statement • SEMICOLON
   36            | Statement • SEMICOLON Statement_1

    SEMICOLON  shift, and go to state 89


State 67

   34 Statement: LBRACE Statement_1 • RBRACE

    RBRACE  shift, and go to state 90


State 68

   55 FuncInvocation: ID • LPAR RPAR
   56               | ID • LPAR Expr RPAR
   57               | ID • LPAR Expr FuncInvocation_rep RPAR
   78 Expr: ID •

    LPAR  shift, and go to state 61

    $default  reduce using rule 78 (Expr)


State 69

   80 Expr: LPAR • Expr RPAR

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 91


State 70

   75 Expr: PLUS • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 92


State 71

   74 Expr: MINUS • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 93


State 72

   73 Expr: NOT • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 94


State 73

   76 Expr: INTLIT •

    $default  reduce using rule 76 (Expr)


State 74

   77 Expr: REALLIT •

    $default  reduce using rule 77 (Expr)


State 75

   79 Expr: FuncInvocation •

    $default  reduce using rule 79 (Expr)


State 76

   37 Statement: IF Expr • LBRACE RBRACE
   38          | IF Expr • LBRACE Statement_rep RBRACE
   39          | IF Expr • LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF Expr • LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr • LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr • LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LBRACE  shift, and go to state 95
    OR      shift, and go to state 96
    AND     shift, and go to state 97
    LT      shift, and go to state 98
    GT      shift, and go to state 99
    EQ      shift, and go to state 100
    NE      shift, and go to state 101
    LE      shift, and go to state 102
    GE      shift, and go to state 103
    PLUS    shift, and go to state 104
    MINUS   shift, and go to state 105
    STAR    shift, and go to state 106
    DIV     shift, and go to state 107
    MOD     shift, and go to state 108


State 77

   49 Statement: RETURN Expr •
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    $default  reduce using rule 49 (Statement)


State 78

   44 Statement: FOR LBRACE • RBRACE
   45          | FOR LBRACE • Statement_rep RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 109
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 110
    Statement_rep   go to state 111
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 79

   46 Statement: FOR Expr • LBRACE RBRACE
   47          | FOR Expr • LBRACE Statement_rep RBRACE
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LBRACE  shift, and go to state 112
    OR      shift, and go to state 96
    AND     shift, and go to state 97
    LT      shift, and go to state 98
    GT      shift, and go to state 99
    EQ      shift, and go to state 100
    NE      shift, and go to state 101
    LE      shift, and go to state 102
    GE      shift, and go to state 103
    PLUS    shift, and go to state 104
    MINUS   shift, and go to state 105
    STAR    shift, and go to state 106
    DIV     shift, and go to state 107
    MOD     shift, and go to state 108


State 80

   52 Statement: PRINT LPAR • Expr RPAR
   53          | PRINT LPAR • STRLIT RPAR

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    STRLIT   shift, and go to state 113
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 114


State 81

   27 VarsAndStatements: VarDeclaration SEMICOLON •
   30                  | VarDeclaration SEMICOLON • VarsAndStatements

    ID         shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 48
    IF         shift, and go to state 49
    RETURN     shift, and go to state 50
    FOR        shift, and go to state 51
    PRINT      shift, and go to state 52

    $default  reduce using rule 27 (VarsAndStatements)

    VarDeclaration     go to state 53
    VarsAndStatements  go to state 115
    Statement          go to state 55
    ParseArgs          go to state 56
    FuncInvocation     go to state 57


State 82

   25 FuncBody: LBRACE VarsAndStatements RBRACE •

    $default  reduce using rule 25 (FuncBody)


State 83

   28 VarsAndStatements: Statement SEMICOLON •
   31                  | Statement SEMICOLON • VarsAndStatements

    ID         shift, and go to state 45
    SEMICOLON  shift, and go to state 46
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 48
    IF         shift, and go to state 49
    RETURN     shift, and go to state 50
    FOR        shift, and go to state 51
    PRINT      shift, and go to state 52

    $default  reduce using rule 28 (VarsAndStatements)

    VarDeclaration     go to state 53
    VarsAndStatements  go to state 116
    Statement          go to state 55
    ParseArgs          go to state 56
    FuncInvocation     go to state 57


State 84

   22 Parameters_1: COMMA ID Type •
   23             | COMMA ID Type • Parameters_1

    COMMA  shift, and go to state 43

    $default  reduce using rule 22 (Parameters_1)

    Parameters_1  go to state 117


State 85

   55 FuncInvocation: ID LPAR RPAR •

    $default  reduce using rule 55 (FuncInvocation)


State 86

   56 FuncInvocation: ID LPAR Expr • RPAR
   57               | ID LPAR Expr • FuncInvocation_rep RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RPAR   shift, and go to state 118
    COMMA  shift, and go to state 119
    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    FuncInvocation_rep  go to state 120


State 87

   54 ParseArgs: ID COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    ASSIGN  shift, and go to state 121


State 88

   32 Statement: ID ASSIGN Expr •
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    $default  reduce using rule 32 (Statement)


State 89

   35 Statement_1: Statement SEMICOLON •
   36            | Statement SEMICOLON • Statement_1

    ID      shift, and go to state 45
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    $default  reduce using rule 35 (Statement_1)

    Statement       go to state 66
    Statement_1     go to state 122
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 90

   34 Statement: LBRACE Statement_1 RBRACE •

    $default  reduce using rule 34 (Statement)


State 91

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   80     | LPAR Expr • RPAR

    RPAR   shift, and go to state 123
    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108


State 92

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   75     | PLUS Expr •

    $default  reduce using rule 75 (Expr)


State 93

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   74     | MINUS Expr •

    $default  reduce using rule 74 (Expr)


State 94

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   73     | NOT Expr •

    $default  reduce using rule 73 (Expr)


State 95

   37 Statement: IF Expr LBRACE • RBRACE
   38          | IF Expr LBRACE • Statement_rep RBRACE
   39          | IF Expr LBRACE • RBRACE ELSE LBRACE RBRACE
   40          | IF Expr LBRACE • RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr LBRACE • Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE • Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 124
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 110
    Statement_rep   go to state 125
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 96

   60 Expr: Expr OR • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 126


State 97

   61 Expr: Expr AND • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 127


State 98

   62 Expr: Expr LT •

    $default  reduce using rule 62 (Expr)


State 99

   63 Expr: Expr GT •

    $default  reduce using rule 63 (Expr)


State 100

   66 Expr: Expr EQ •

    $default  reduce using rule 66 (Expr)


State 101

   67 Expr: Expr NE •

    $default  reduce using rule 67 (Expr)


State 102

   64 Expr: Expr LE •

    $default  reduce using rule 64 (Expr)


State 103

   65 Expr: Expr GE •

    $default  reduce using rule 65 (Expr)


State 104

   68 Expr: Expr PLUS • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 128


State 105

   69 Expr: Expr MINUS • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 129


State 106

   70 Expr: Expr STAR • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 130


State 107

   71 Expr: Expr DIV • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 131


State 108

   72 Expr: Expr MOD • Expr

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 132


State 109

   44 Statement: FOR LBRACE RBRACE •

    $default  reduce using rule 44 (Statement)


State 110

   43 Statement_rep: Statement • SEMICOLON

    SEMICOLON  shift, and go to state 133


State 111

   45 Statement: FOR LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 134


State 112

   46 Statement: FOR Expr LBRACE • RBRACE
   47          | FOR Expr LBRACE • Statement_rep RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 135
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 110
    Statement_rep   go to state 136
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 113

   53 Statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 137


State 114

   52 Statement: PRINT LPAR Expr • RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RPAR   shift, and go to state 138
    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108


State 115

   30 VarsAndStatements: VarDeclaration SEMICOLON VarsAndStatements •

    $default  reduce using rule 30 (VarsAndStatements)


State 116

   31 VarsAndStatements: Statement SEMICOLON VarsAndStatements •

    $default  reduce using rule 31 (VarsAndStatements)


State 117

   23 Parameters_1: COMMA ID Type Parameters_1 •

    $default  reduce using rule 23 (Parameters_1)


State 118

   56 FuncInvocation: ID LPAR Expr RPAR •

    $default  reduce using rule 56 (FuncInvocation)


State 119

   58 FuncInvocation_rep: COMMA • Expr
   59                   | COMMA • Expr FuncInvocation_rep

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 139


State 120

   57 FuncInvocation: ID LPAR Expr FuncInvocation_rep • RPAR

    RPAR  shift, and go to state 140


State 121

   54 ParseArgs: ID COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    PARSEINT  shift, and go to state 141


State 122

   36 Statement_1: Statement SEMICOLON Statement_1 •

    $default  reduce using rule 36 (Statement_1)


State 123

   80 Expr: LPAR Expr RPAR •

    $default  reduce using rule 80 (Expr)


State 124

   37 Statement: IF Expr LBRACE RBRACE •
   39          | IF Expr LBRACE RBRACE • ELSE LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE • ELSE LBRACE Statement_rep RBRACE

    ELSE  shift, and go to state 142

    $default  reduce using rule 37 (Statement)


State 125

   38 Statement: IF Expr LBRACE Statement_rep • RBRACE
   41          | IF Expr LBRACE Statement_rep • RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep • RBRACE ELSE LBRACE Statement_rep RBRACE

    RBRACE  shift, and go to state 143


State 126

   60 Expr: Expr • OR Expr
   60     | Expr OR Expr •
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    $default  reduce using rule 60 (Expr)


State 127

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   61     | Expr AND Expr •
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    $default  reduce using rule 61 (Expr)


State 128

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   68     | Expr PLUS Expr •
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    STAR  shift, and go to state 106
    DIV   shift, and go to state 107
    MOD   shift, and go to state 108

    $default  reduce using rule 68 (Expr)


State 129

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   69     | Expr MINUS Expr •
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    STAR  shift, and go to state 106
    DIV   shift, and go to state 107
    MOD   shift, and go to state 108

    $default  reduce using rule 69 (Expr)


State 130

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   70     | Expr STAR Expr •
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    $default  reduce using rule 70 (Expr)


State 131

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   71     | Expr DIV Expr •
   72     | Expr • MOD Expr

    $default  reduce using rule 71 (Expr)


State 132

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   72     | Expr MOD Expr •

    $default  reduce using rule 72 (Expr)


State 133

   43 Statement_rep: Statement SEMICOLON •

    $default  reduce using rule 43 (Statement_rep)


State 134

   45 Statement: FOR LBRACE Statement_rep RBRACE •

    $default  reduce using rule 45 (Statement)


State 135

   46 Statement: FOR Expr LBRACE RBRACE •

    $default  reduce using rule 46 (Statement)


State 136

   47 Statement: FOR Expr LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 144


State 137

   53 Statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 53 (Statement)


State 138

   52 Statement: PRINT LPAR Expr RPAR •

    $default  reduce using rule 52 (Statement)


State 139

   58 FuncInvocation_rep: COMMA Expr •
   59                   | COMMA Expr • FuncInvocation_rep
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    COMMA  shift, and go to state 119
    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108

    $default  reduce using rule 58 (FuncInvocation_rep)

    FuncInvocation_rep  go to state 145


State 140

   57 FuncInvocation: ID LPAR Expr FuncInvocation_rep RPAR •

    $default  reduce using rule 57 (FuncInvocation)


State 141

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 146


State 142

   39 Statement: IF Expr LBRACE RBRACE ELSE • LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE ELSE • LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 147


State 143

   38 Statement: IF Expr LBRACE Statement_rep RBRACE •
   41          | IF Expr LBRACE Statement_rep RBRACE • ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE • ELSE LBRACE Statement_rep RBRACE

    ELSE  shift, and go to state 148

    $default  reduce using rule 38 (Statement)


State 144

   47 Statement: FOR Expr LBRACE Statement_rep RBRACE •

    $default  reduce using rule 47 (Statement)


State 145

   59 FuncInvocation_rep: COMMA Expr FuncInvocation_rep •

    $default  reduce using rule 59 (FuncInvocation_rep)


State 146

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ Expr RSQ RPAR

    CMDARGS  shift, and go to state 149


State 147

   39 Statement: IF Expr LBRACE RBRACE ELSE LBRACE • RBRACE
   40          | IF Expr LBRACE RBRACE ELSE LBRACE • Statement_rep RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 150
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 110
    Statement_rep   go to state 151
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 148

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE • LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE • LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 152


State 149

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 153


State 150

   39 Statement: IF Expr LBRACE RBRACE ELSE LBRACE RBRACE •

    $default  reduce using rule 39 (Statement)


State 151

   40 Statement: IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 154


State 152

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE • RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE • Statement_rep RBRACE

    ID      shift, and go to state 45
    RBRACE  shift, and go to state 155
    LBRACE  shift, and go to state 48
    IF      shift, and go to state 49
    RETURN  shift, and go to state 50
    FOR     shift, and go to state 51
    PRINT   shift, and go to state 52

    Statement       go to state 110
    Statement_rep   go to state 156
    ParseArgs       go to state 56
    FuncInvocation  go to state 57


State 153

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • Expr RSQ RPAR

    ID       shift, and go to state 68
    LPAR     shift, and go to state 69
    PLUS     shift, and go to state 70
    MINUS    shift, and go to state 71
    NOT      shift, and go to state 72
    INTLIT   shift, and go to state 73
    REALLIT  shift, and go to state 74

    FuncInvocation  go to state 75
    Expr            go to state 157


State 154

   40 Statement: IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE •

    $default  reduce using rule 40 (Statement)


State 155

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE •

    $default  reduce using rule 41 (Statement)


State 156

   42 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 158


State 157

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr • RSQ RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT
   63     | Expr • GT
   64     | Expr • LE
   65     | Expr • GE
   66     | Expr • EQ
   67     | Expr • NE
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RSQ    shift, and go to state 159
    OR     shift, and go to state 96
    AND    shift, and go to state 97
    LT     shift, and go to state 98
    GT     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    LE     shift, and go to state 102
    GE     shift, and go to state 103
    PLUS   shift, and go to state 104
    MINUS  shift, and go to state 105
    STAR   shift, and go to state 106
    DIV    shift, and go to state 107
    MOD    shift, and go to state 108


State 158

   42 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE •

    $default  reduce using rule 42 (Statement)


State 159

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 160


State 160

   54 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR •

    $default  reduce using rule 54 (ParseArgs)
