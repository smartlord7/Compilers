Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations
    2        | PACKAGE ID SEMICOLON

    3 Declarations: VarDeclaration SEMICOLON
    4             | VarDeclaration SEMICOLON Declarations
    5             | FuncDeclaration SEMICOLON
    6             | FuncDeclaration SEMICOLON Declarations

    7 VarDeclaration: VAR VarSpec
    8               | VAR LPAR VarSpec SEMICOLON RPAR

    9 VarSpec: ID VarSpec_1

   10 VarSpec_1: Type
   11          | COMMA ID VarSpec_1

   12 Type: INT
   13     | FLOAT32
   14     | BOOL
   15     | STRING

   16 FuncDeclaration: FUNC ID LPAR RPAR FuncBody
   17                | FUNC ID LPAR Parameters RPAR FuncBody
   18                | FUNC ID LPAR RPAR Type FuncBody
   19                | FUNC ID LPAR Parameters RPAR Type FuncBody

   20 Parameters: ID Type
   21           | ID Type Parameters_1

   22 Parameters_1: COMMA ID Type
   23             | COMMA ID Type Parameters_1

   24 FuncBody: LBRACE RBRACE
   25         | LBRACE VarsAndStatements RBRACE

   26 VarsAndStatements: SEMICOLON
   27                  | VarDeclaration SEMICOLON
   28                  | Statement SEMICOLON
   29                  | VarsAndStatements SEMICOLON
   30                  | VarsAndStatements VarDeclaration SEMICOLON
   31                  | VarsAndStatements Statement SEMICOLON

   32 Statement: ID ASSIGN Expr
   33          | LBRACE RBRACE
   34          | LBRACE Statement_1 RBRACE

   35 Statement_1: Statement SEMICOLON
   36            | Statement SEMICOLON Statement_1

   37 Statement: IF Expr LBRACE RBRACE
   38          | IF Expr LBRACE Statement_rep RBRACE
   39          | IF Expr LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

   43 Statement_rep: Statement SEMICOLON

   44 Statement: FOR LBRACE RBRACE
   45          | FOR LBRACE Statement_rep RBRACE
   46          | FOR Expr LBRACE RBRACE
   47          | FOR Expr LBRACE Statement_rep RBRACE
   48          | RETURN
   49          | RETURN Expr
   50          | FuncInvocation
   51          | ParseArgs
   52          | PRINT LPAR Expr RPAR
   53          | PRINT LPAR STRLIT RPAR
   54          | error

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   57 FuncInvocation: ID LPAR RPAR
   58               | ID LPAR Expr RPAR
   59               | ID LPAR Expr FuncInvocation_rep RPAR

   60 FuncInvocation_rep: COMMA Expr
   61                   | COMMA Expr FuncInvocation_rep

   62 FuncInvocation: ID LPAR error RPAR

   63 Expr: Expr OR Expr
   64     | Expr AND Expr
   65     | Expr LT
   66     | Expr GT
   67     | Expr LE
   68     | Expr GE
   69     | Expr EQ
   70     | Expr NE
   71     | Expr PLUS Expr
   72     | Expr MINUS Expr
   73     | Expr STAR Expr
   74     | Expr DIV Expr
   75     | Expr MOD Expr
   76     | NOT Expr
   77     | MINUS Expr
   78     | PLUS Expr
   79     | INTLIT
   80     | REALLIT
   81     | ID
   82     | FuncInvocation
   83     | LPAR Expr RPAR
   84     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 54 56 62 84
    PACKAGE <package> (258) 1 2
    ID (259) 1 2 9 11 16 17 18 19 20 21 22 23 32 55 56 57 58 59 62 81
    SEMICOLON (260) 1 2 3 4 5 6 8 26 27 28 29 30 31 35 36 43
    VAR (261) 7 8
    LPAR (262) 8 16 17 18 19 52 53 55 56 57 58 59 62 83 84
    RPAR (263) 8 16 17 18 19 52 53 55 56 57 58 59 62 83 84
    COMMA (264) 11 22 23 55 56 60 61
    INT (265) 12
    FLOAT32 (266) 13
    BOOL (267) 14
    STRING (268) 15
    RBRACE (269) 24 25 33 34 37 38 39 40 41 42 44 45 46 47
    LBRACE (270) 24 25 33 34 37 38 39 40 41 42 44 45 46 47
    ASSIGN (271) 32 55 56
    IF (272) 37 38 39 40 41 42
    ELSE (273) 39 40 41 42
    RETURN (274) 48 49
    FOR (275) 44 45 46 47
    PRINT (276) 52 53
    STRLIT (277) 53
    BLANKID (278) 55 56
    PARSEINT (279) 55 56
    CMDARGS (280) 55
    LSQ (281) 55
    RSQ (282) 55
    OR (283) 63
    AND (284) 64
    LT (285) 65
    GT (286) 66
    EQ (287) 69
    NE (288) 70
    LE (289) 67
    GE (290) 68
    PLUS (291) 71 78
    MINUS (292) 72 77
    STAR (293) 73
    DIV (294) 74
    MOD (295) 75
    NOT (296) 76
    INTLIT (297) 79
    REALLIT (298) 80
    FUNC (299) 16 17 18 19


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program (46)
        on left: 1 2
        on right: 0
    Declarations (47)
        on left: 3 4 5 6
        on right: 1 4 6
    VarDeclaration (48)
        on left: 7 8
        on right: 3 4 27 30
    VarSpec (49)
        on left: 9
        on right: 7 8
    VarSpec_1 (50)
        on left: 10 11
        on right: 9 11
    Type (51)
        on left: 12 13 14 15
        on right: 10 18 19 20 21 22 23
    FuncDeclaration (52)
        on left: 16 17 18 19
        on right: 5 6
    Parameters (53)
        on left: 20 21
        on right: 17 19
    Parameters_1 (54)
        on left: 22 23
        on right: 21 23
    FuncBody (55)
        on left: 24 25
        on right: 16 17 18 19
    VarsAndStatements (56)
        on left: 26 27 28 29 30 31
        on right: 25 29 30 31
    Statement (57)
        on left: 32 33 34 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 54
        on right: 28 31 35 36 43
    Statement_1 (58)
        on left: 35 36
        on right: 34 36
    Statement_rep (59)
        on left: 43
        on right: 38 40 41 42 45 47
    ParseArgs (60)
        on left: 55 56
        on right: 51
    FuncInvocation (61)
        on left: 57 58 59 62
        on right: 50 82
    FuncInvocation_rep (62)
        on left: 60 61
        on right: 59 61
    Expr (63)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 32 37 38 39 40 41 42 46 47 49 52 55 58 59 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 83


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations
    2        | PACKAGE . ID SEMICOLON

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations
    2        | PACKAGE ID . SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations
    2        | PACKAGE ID SEMICOLON .

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 2 (Program)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    7 VarDeclaration: VAR . VarSpec
    8               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 7

   16 FuncDeclaration: FUNC . ID LPAR RPAR FuncBody
   17                | FUNC . ID LPAR Parameters RPAR FuncBody
   18                | FUNC . ID LPAR RPAR Type FuncBody
   19                | FUNC . ID LPAR Parameters RPAR Type FuncBody

    ID  shift, and go to state 14


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


State 9

    3 Declarations: VarDeclaration . SEMICOLON
    4             | VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 10

    5 Declarations: FuncDeclaration . SEMICOLON
    6             | FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    9 VarSpec: ID . VarSpec_1

    COMMA    shift, and go to state 17
    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    VarSpec_1  go to state 22
    Type       go to state 23


State 12

    8 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 24


State 13

    7 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 7 (VarDeclaration)


State 14

   16 FuncDeclaration: FUNC ID . LPAR RPAR FuncBody
   17                | FUNC ID . LPAR Parameters RPAR FuncBody
   18                | FUNC ID . LPAR RPAR Type FuncBody
   19                | FUNC ID . LPAR Parameters RPAR Type FuncBody

    LPAR  shift, and go to state 25


State 15

    3 Declarations: VarDeclaration SEMICOLON .
    4             | VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    Declarations     go to state 26
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 16

    5 Declarations: FuncDeclaration SEMICOLON .
    6             | FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 5 (Declarations)

    Declarations     go to state 27
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

   11 VarSpec_1: COMMA . ID VarSpec_1

    ID  shift, and go to state 28


State 18

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 19

   13 Type: FLOAT32 .

    $default  reduce using rule 13 (Type)


State 20

   14 Type: BOOL .

    $default  reduce using rule 14 (Type)


State 21

   15 Type: STRING .

    $default  reduce using rule 15 (Type)


State 22

    9 VarSpec: ID VarSpec_1 .

    $default  reduce using rule 9 (VarSpec)


State 23

   10 VarSpec_1: Type .

    $default  reduce using rule 10 (VarSpec_1)


State 24

    8 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 25

   16 FuncDeclaration: FUNC ID LPAR . RPAR FuncBody
   17                | FUNC ID LPAR . Parameters RPAR FuncBody
   18                | FUNC ID LPAR . RPAR Type FuncBody
   19                | FUNC ID LPAR . Parameters RPAR Type FuncBody

    ID    shift, and go to state 30
    RPAR  shift, and go to state 31

    Parameters  go to state 32


State 26

    4 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 4 (Declarations)


State 27

    6 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 6 (Declarations)


State 28

   11 VarSpec_1: COMMA ID . VarSpec_1

    COMMA    shift, and go to state 17
    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    VarSpec_1  go to state 33
    Type       go to state 23


State 29

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 34


State 30

   20 Parameters: ID . Type
   21           | ID . Type Parameters_1

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    Type  go to state 35


State 31

   16 FuncDeclaration: FUNC ID LPAR RPAR . FuncBody
   18                | FUNC ID LPAR RPAR . Type FuncBody

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21
    LBRACE   shift, and go to state 36

    Type      go to state 37
    FuncBody  go to state 38


State 32

   17 FuncDeclaration: FUNC ID LPAR Parameters . RPAR FuncBody
   19                | FUNC ID LPAR Parameters . RPAR Type FuncBody

    RPAR  shift, and go to state 39


State 33

   11 VarSpec_1: COMMA ID VarSpec_1 .

    $default  reduce using rule 11 (VarSpec_1)


State 34

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 8 (VarDeclaration)


State 35

   20 Parameters: ID Type .
   21           | ID Type . Parameters_1

    COMMA  shift, and go to state 40

    $default  reduce using rule 20 (Parameters)

    Parameters_1  go to state 41


State 36

   24 FuncBody: LBRACE . RBRACE
   25         | LBRACE . VarsAndStatements RBRACE

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 44
    VAR        shift, and go to state 6
    RBRACE     shift, and go to state 45
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    VarDeclaration     go to state 51
    VarsAndStatements  go to state 52
    Statement          go to state 53
    ParseArgs          go to state 54
    FuncInvocation     go to state 55


State 37

   18 FuncDeclaration: FUNC ID LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 56


State 38

   16 FuncDeclaration: FUNC ID LPAR RPAR FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 39

   17 FuncDeclaration: FUNC ID LPAR Parameters RPAR . FuncBody
   19                | FUNC ID LPAR Parameters RPAR . Type FuncBody

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21
    LBRACE   shift, and go to state 36

    Type      go to state 57
    FuncBody  go to state 58


State 40

   22 Parameters_1: COMMA . ID Type
   23             | COMMA . ID Type Parameters_1

    ID  shift, and go to state 59


State 41

   21 Parameters: ID Type Parameters_1 .

    $default  reduce using rule 21 (Parameters)


State 42

   54 Statement: error .

    $default  reduce using rule 54 (Statement)


State 43

   32 Statement: ID . ASSIGN Expr
   55 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   57 FuncInvocation: ID . LPAR RPAR
   58               | ID . LPAR Expr RPAR
   59               | ID . LPAR Expr FuncInvocation_rep RPAR
   62               | ID . LPAR error RPAR

    LPAR    shift, and go to state 60
    COMMA   shift, and go to state 61
    ASSIGN  shift, and go to state 62


State 44

   26 VarsAndStatements: SEMICOLON .

    $default  reduce using rule 26 (VarsAndStatements)


State 45

   24 FuncBody: LBRACE RBRACE .

    $default  reduce using rule 24 (FuncBody)


State 46

   33 Statement: LBRACE . RBRACE
   34          | LBRACE . Statement_1 RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 63
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 64
    Statement_1     go to state 65
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 47

   37 Statement: IF . Expr LBRACE RBRACE
   38          | IF . Expr LBRACE Statement_rep RBRACE
   39          | IF . Expr LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF . Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF . Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF . Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 74


State 48

   48 Statement: RETURN .
   49          | RETURN . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    $default  reduce using rule 48 (Statement)

    FuncInvocation  go to state 73
    Expr            go to state 75


State 49

   44 Statement: FOR . LBRACE RBRACE
   45          | FOR . LBRACE Statement_rep RBRACE
   46          | FOR . Expr LBRACE RBRACE
   47          | FOR . Expr LBRACE Statement_rep RBRACE

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    LBRACE   shift, and go to state 76
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 77


State 50

   52 Statement: PRINT . LPAR Expr RPAR
   53          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 78


State 51

   27 VarsAndStatements: VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 52

   25 FuncBody: LBRACE VarsAndStatements . RBRACE
   29 VarsAndStatements: VarsAndStatements . SEMICOLON
   30                  | VarsAndStatements . VarDeclaration SEMICOLON
   31                  | VarsAndStatements . Statement SEMICOLON

    error      shift, and go to state 42
    ID         shift, and go to state 43
    SEMICOLON  shift, and go to state 80
    VAR        shift, and go to state 6
    RBRACE     shift, and go to state 81
    LBRACE     shift, and go to state 46
    IF         shift, and go to state 47
    RETURN     shift, and go to state 48
    FOR        shift, and go to state 49
    PRINT      shift, and go to state 50

    VarDeclaration  go to state 82
    Statement       go to state 83
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 53

   28 VarsAndStatements: Statement . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 54

   51 Statement: ParseArgs .

    $default  reduce using rule 51 (Statement)


State 55

   50 Statement: FuncInvocation .

    $default  reduce using rule 50 (Statement)


State 56

   18 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody .

    $default  reduce using rule 18 (FuncDeclaration)


State 57

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 85


State 58

   17 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 59

   22 Parameters_1: COMMA ID . Type
   23             | COMMA ID . Type Parameters_1

    INT      shift, and go to state 18
    FLOAT32  shift, and go to state 19
    BOOL     shift, and go to state 20
    STRING   shift, and go to state 21

    Type  go to state 86


State 60

   57 FuncInvocation: ID LPAR . RPAR
   58               | ID LPAR . Expr RPAR
   59               | ID LPAR . Expr FuncInvocation_rep RPAR
   62               | ID LPAR . error RPAR

    error    shift, and go to state 87
    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    RPAR     shift, and go to state 88
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 89


State 61

   55 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 90


State 62

   32 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 91


State 63

   33 Statement: LBRACE RBRACE .

    $default  reduce using rule 33 (Statement)


State 64

   35 Statement_1: Statement . SEMICOLON
   36            | Statement . SEMICOLON Statement_1

    SEMICOLON  shift, and go to state 92


State 65

   34 Statement: LBRACE Statement_1 . RBRACE

    RBRACE  shift, and go to state 93


State 66

   57 FuncInvocation: ID . LPAR RPAR
   58               | ID . LPAR Expr RPAR
   59               | ID . LPAR Expr FuncInvocation_rep RPAR
   62               | ID . LPAR error RPAR
   81 Expr: ID .

    LPAR  shift, and go to state 60

    $default  reduce using rule 81 (Expr)


State 67

   83 Expr: LPAR . Expr RPAR
   84     | LPAR . error RPAR

    error    shift, and go to state 94
    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 95


State 68

   78 Expr: PLUS . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 96


State 69

   77 Expr: MINUS . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 97


State 70

   76 Expr: NOT . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 98


State 71

   79 Expr: INTLIT .

    $default  reduce using rule 79 (Expr)


State 72

   80 Expr: REALLIT .

    $default  reduce using rule 80 (Expr)


State 73

   82 Expr: FuncInvocation .

    $default  reduce using rule 82 (Expr)


State 74

   37 Statement: IF Expr . LBRACE RBRACE
   38          | IF Expr . LBRACE Statement_rep RBRACE
   39          | IF Expr . LBRACE RBRACE ELSE LBRACE RBRACE
   40          | IF Expr . LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr . LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr . LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    LBRACE  shift, and go to state 99
    OR      shift, and go to state 100
    AND     shift, and go to state 101
    LT      shift, and go to state 102
    GT      shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    PLUS    shift, and go to state 108
    MINUS   shift, and go to state 109
    STAR    shift, and go to state 110
    DIV     shift, and go to state 111
    MOD     shift, and go to state 112


State 75

   49 Statement: RETURN Expr .
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 49 (Statement)


State 76

   44 Statement: FOR LBRACE . RBRACE
   45          | FOR LBRACE . Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 113
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 114
    Statement_rep   go to state 115
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 77

   46 Statement: FOR Expr . LBRACE RBRACE
   47          | FOR Expr . LBRACE Statement_rep RBRACE
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    LBRACE  shift, and go to state 116
    OR      shift, and go to state 100
    AND     shift, and go to state 101
    LT      shift, and go to state 102
    GT      shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    PLUS    shift, and go to state 108
    MINUS   shift, and go to state 109
    STAR    shift, and go to state 110
    DIV     shift, and go to state 111
    MOD     shift, and go to state 112


State 78

   52 Statement: PRINT LPAR . Expr RPAR
   53          | PRINT LPAR . STRLIT RPAR

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    STRLIT   shift, and go to state 117
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 118


State 79

   27 VarsAndStatements: VarDeclaration SEMICOLON .

    $default  reduce using rule 27 (VarsAndStatements)


State 80

   29 VarsAndStatements: VarsAndStatements SEMICOLON .

    $default  reduce using rule 29 (VarsAndStatements)


State 81

   25 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 25 (FuncBody)


State 82

   30 VarsAndStatements: VarsAndStatements VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 83

   31 VarsAndStatements: VarsAndStatements Statement . SEMICOLON

    SEMICOLON  shift, and go to state 120


State 84

   28 VarsAndStatements: Statement SEMICOLON .

    $default  reduce using rule 28 (VarsAndStatements)


State 85

   19 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 19 (FuncDeclaration)


State 86

   22 Parameters_1: COMMA ID Type .
   23             | COMMA ID Type . Parameters_1

    COMMA  shift, and go to state 40

    $default  reduce using rule 22 (Parameters_1)

    Parameters_1  go to state 121


State 87

   62 FuncInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 122


State 88

   57 FuncInvocation: ID LPAR RPAR .

    $default  reduce using rule 57 (FuncInvocation)


State 89

   58 FuncInvocation: ID LPAR Expr . RPAR
   59               | ID LPAR Expr . FuncInvocation_rep RPAR
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    RPAR   shift, and go to state 123
    COMMA  shift, and go to state 124
    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    FuncInvocation_rep  go to state 125


State 90

   55 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 126


State 91

   32 Statement: ID ASSIGN Expr .
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 32 (Statement)


State 92

   35 Statement_1: Statement SEMICOLON .
   36            | Statement SEMICOLON . Statement_1

    error   shift, and go to state 42
    ID      shift, and go to state 43
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    RBRACE  reduce using rule 35 (Statement_1)

    Statement       go to state 64
    Statement_1     go to state 127
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 93

   34 Statement: LBRACE Statement_1 RBRACE .

    $default  reduce using rule 34 (Statement)


State 94

   84 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 128


State 95

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr
   83     | LPAR Expr . RPAR

    RPAR   shift, and go to state 129
    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 96

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr
   78     | PLUS Expr .

    $default  reduce using rule 78 (Expr)


State 97

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr
   77     | MINUS Expr .

    $default  reduce using rule 77 (Expr)


State 98

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr
   76     | NOT Expr .

    $default  reduce using rule 76 (Expr)


State 99

   37 Statement: IF Expr LBRACE . RBRACE
   38          | IF Expr LBRACE . Statement_rep RBRACE
   39          | IF Expr LBRACE . RBRACE ELSE LBRACE RBRACE
   40          | IF Expr LBRACE . RBRACE ELSE LBRACE Statement_rep RBRACE
   41          | IF Expr LBRACE . Statement_rep RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE . Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 130
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 114
    Statement_rep   go to state 131
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 100

   63 Expr: Expr OR . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 132


State 101

   64 Expr: Expr AND . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 133


State 102

   65 Expr: Expr LT .

    $default  reduce using rule 65 (Expr)


State 103

   66 Expr: Expr GT .

    $default  reduce using rule 66 (Expr)


State 104

   69 Expr: Expr EQ .

    $default  reduce using rule 69 (Expr)


State 105

   70 Expr: Expr NE .

    $default  reduce using rule 70 (Expr)


State 106

   67 Expr: Expr LE .

    $default  reduce using rule 67 (Expr)


State 107

   68 Expr: Expr GE .

    $default  reduce using rule 68 (Expr)


State 108

   71 Expr: Expr PLUS . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 134


State 109

   72 Expr: Expr MINUS . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 135


State 110

   73 Expr: Expr STAR . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 136


State 111

   74 Expr: Expr DIV . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 137


State 112

   75 Expr: Expr MOD . Expr

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 138


State 113

   44 Statement: FOR LBRACE RBRACE .

    $default  reduce using rule 44 (Statement)


State 114

   43 Statement_rep: Statement . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 115

   45 Statement: FOR LBRACE Statement_rep . RBRACE

    RBRACE  shift, and go to state 140


State 116

   46 Statement: FOR Expr LBRACE . RBRACE
   47          | FOR Expr LBRACE . Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 141
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 114
    Statement_rep   go to state 142
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 117

   53 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 143


State 118

   52 Statement: PRINT LPAR Expr . RPAR
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    RPAR   shift, and go to state 144
    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 119

   30 VarsAndStatements: VarsAndStatements VarDeclaration SEMICOLON .

    $default  reduce using rule 30 (VarsAndStatements)


State 120

   31 VarsAndStatements: VarsAndStatements Statement SEMICOLON .

    $default  reduce using rule 31 (VarsAndStatements)


State 121

   23 Parameters_1: COMMA ID Type Parameters_1 .

    $default  reduce using rule 23 (Parameters_1)


State 122

   62 FuncInvocation: ID LPAR error RPAR .

    $default  reduce using rule 62 (FuncInvocation)


State 123

   58 FuncInvocation: ID LPAR Expr RPAR .

    $default  reduce using rule 58 (FuncInvocation)


State 124

   60 FuncInvocation_rep: COMMA . Expr
   61                   | COMMA . Expr FuncInvocation_rep

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 145


State 125

   59 FuncInvocation: ID LPAR Expr FuncInvocation_rep . RPAR

    RPAR  shift, and go to state 146


State 126

   55 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 147


State 127

   36 Statement_1: Statement SEMICOLON Statement_1 .

    $default  reduce using rule 36 (Statement_1)


State 128

   84 Expr: LPAR error RPAR .

    $default  reduce using rule 84 (Expr)


State 129

   83 Expr: LPAR Expr RPAR .

    $default  reduce using rule 83 (Expr)


State 130

   37 Statement: IF Expr LBRACE RBRACE .
   39          | IF Expr LBRACE RBRACE . ELSE LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE . ELSE LBRACE Statement_rep RBRACE

    ELSE  shift, and go to state 148

    $default  reduce using rule 37 (Statement)


State 131

   38 Statement: IF Expr LBRACE Statement_rep . RBRACE
   41          | IF Expr LBRACE Statement_rep . RBRACE ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep . RBRACE ELSE LBRACE Statement_rep RBRACE

    RBRACE  shift, and go to state 149


State 132

   63 Expr: Expr . OR Expr
   63     | Expr OR Expr .
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 63 (Expr)


State 133

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   64     | Expr AND Expr .
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 64 (Expr)


State 134

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   71     | Expr PLUS Expr .
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 71 (Expr)


State 135

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   72     | Expr MINUS Expr .
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    STAR  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 72 (Expr)


State 136

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   73     | Expr STAR Expr .
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    $default  reduce using rule 73 (Expr)


State 137

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   74     | Expr DIV Expr .
   75     | Expr . MOD Expr

    $default  reduce using rule 74 (Expr)


State 138

   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr
   75     | Expr MOD Expr .

    $default  reduce using rule 75 (Expr)


State 139

   43 Statement_rep: Statement SEMICOLON .

    $default  reduce using rule 43 (Statement_rep)


State 140

   45 Statement: FOR LBRACE Statement_rep RBRACE .

    $default  reduce using rule 45 (Statement)


State 141

   46 Statement: FOR Expr LBRACE RBRACE .

    $default  reduce using rule 46 (Statement)


State 142

   47 Statement: FOR Expr LBRACE Statement_rep . RBRACE

    RBRACE  shift, and go to state 150


State 143

   53 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 53 (Statement)


State 144

   52 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 52 (Statement)


State 145

   60 FuncInvocation_rep: COMMA Expr .
   61                   | COMMA Expr . FuncInvocation_rep
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    COMMA  shift, and go to state 124
    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112

    $default  reduce using rule 60 (FuncInvocation_rep)

    FuncInvocation_rep  go to state 151


State 146

   59 FuncInvocation: ID LPAR Expr FuncInvocation_rep RPAR .

    $default  reduce using rule 59 (FuncInvocation)


State 147

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 152


State 148

   39 Statement: IF Expr LBRACE RBRACE ELSE . LBRACE RBRACE
   40          | IF Expr LBRACE RBRACE ELSE . LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 153


State 149

   38 Statement: IF Expr LBRACE Statement_rep RBRACE .
   41          | IF Expr LBRACE Statement_rep RBRACE . ELSE LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE . ELSE LBRACE Statement_rep RBRACE

    ELSE  shift, and go to state 154

    $default  reduce using rule 38 (Statement)


State 150

   47 Statement: FOR Expr LBRACE Statement_rep RBRACE .

    $default  reduce using rule 47 (Statement)


State 151

   61 FuncInvocation_rep: COMMA Expr FuncInvocation_rep .

    $default  reduce using rule 61 (FuncInvocation_rep)


State 152

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   56          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 155
    CMDARGS  shift, and go to state 156


State 153

   39 Statement: IF Expr LBRACE RBRACE ELSE LBRACE . RBRACE
   40          | IF Expr LBRACE RBRACE ELSE LBRACE . Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 157
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 114
    Statement_rep   go to state 158
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 154

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE . LBRACE RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE . LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 159


State 155

   56 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 160


State 156

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 161


State 157

   39 Statement: IF Expr LBRACE RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 39 (Statement)


State 158

   40 Statement: IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep . RBRACE

    RBRACE  shift, and go to state 162


State 159

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE . RBRACE
   42          | IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE . Statement_rep RBRACE

    error   shift, and go to state 42
    ID      shift, and go to state 43
    RBRACE  shift, and go to state 163
    LBRACE  shift, and go to state 46
    IF      shift, and go to state 47
    RETURN  shift, and go to state 48
    FOR     shift, and go to state 49
    PRINT   shift, and go to state 50

    Statement       go to state 114
    Statement_rep   go to state 164
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 160

   56 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 56 (ParseArgs)


State 161

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 66
    LPAR     shift, and go to state 67
    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    NOT      shift, and go to state 70
    INTLIT   shift, and go to state 71
    REALLIT  shift, and go to state 72

    FuncInvocation  go to state 73
    Expr            go to state 165


State 162

   40 Statement: IF Expr LBRACE RBRACE ELSE LBRACE Statement_rep RBRACE .

    $default  reduce using rule 40 (Statement)


State 163

   41 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE RBRACE .

    $default  reduce using rule 41 (Statement)


State 164

   42 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep . RBRACE

    RBRACE  shift, and go to state 166


State 165

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   63 Expr: Expr . OR Expr
   64     | Expr . AND Expr
   65     | Expr . LT
   66     | Expr . GT
   67     | Expr . LE
   68     | Expr . GE
   69     | Expr . EQ
   70     | Expr . NE
   71     | Expr . PLUS Expr
   72     | Expr . MINUS Expr
   73     | Expr . STAR Expr
   74     | Expr . DIV Expr
   75     | Expr . MOD Expr

    RSQ    shift, and go to state 167
    OR     shift, and go to state 100
    AND    shift, and go to state 101
    LT     shift, and go to state 102
    GT     shift, and go to state 103
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109
    STAR   shift, and go to state 110
    DIV    shift, and go to state 111
    MOD    shift, and go to state 112


State 166

   42 Statement: IF Expr LBRACE Statement_rep RBRACE ELSE LBRACE Statement_rep RBRACE .

    $default  reduce using rule 42 (Statement)


State 167

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 168


State 168

   55 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 55 (ParseArgs)
