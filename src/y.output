Terminals unused in grammar

    UNARY


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations
    2        | PACKAGE ID SEMICOLON

    3 Declarations: VarDeclaration SEMICOLON
    4             | VarDeclaration SEMICOLON Declarations
    5             | FuncDeclaration SEMICOLON
    6             | FuncDeclaration SEMICOLON Declarations

    7 VarDeclaration: VAR VarSpec
    8               | VAR LPAR VarSpec SEMICOLON RPAR

    9 VarSpec: ID VarSpec_1

   10 VarSpec_1: Type
   11          | COMMA ID VarSpec_1

   12 Type: INT
   13     | FLOAT32
   14     | BOOL
   15     | STRING

   16 FuncHeader: FUNC ID LPAR RPAR
   17           | FUNC ID LPAR Parameters RPAR
   18           | FUNC ID LPAR RPAR Type
   19           | FUNC ID LPAR Parameters RPAR Type

   20 FuncDeclaration: FuncHeader FuncBody

   21 Parameters: ID Type
   22           | ID Type Parameters_1

   23 Parameters_1: COMMA ID Type
   24             | COMMA ID Type Parameters_1

   25 FuncBody: LBRACE RBRACE
   26         | LBRACE VarsAndStatements RBRACE

   27 VarsAndStatements: SEMICOLON
   28                  | VarDeclaration SEMICOLON
   29                  | Statement SEMICOLON
   30                  | SEMICOLON VarsAndStatements
   31                  | VarDeclaration SEMICOLON VarsAndStatements
   32                  | Statement SEMICOLON VarsAndStatements

   33 Statement: ID ASSIGN Expr
   34          | LBRACE RBRACE
   35          | LBRACE Statement_1 RBRACE

   36 Statement_1: Statement SEMICOLON
   37            | Statement SEMICOLON Statement_1

   38 Statement: IF Expr LBRACE Statement_rep RBRACE OPT_ELSE

   39 OPT_ELSE: ELSE LBRACE Statement_rep RBRACE
   40         | %empty

   41 Statement_rep: %empty
   42              | Statement SEMICOLON Statement_rep

   43 Statement: FOR LBRACE Statement_rep RBRACE
   44          | FOR Expr LBRACE Statement_rep RBRACE
   45          | RETURN
   46          | RETURN Expr
   47          | FuncInvocation
   48          | ParseArgs
   49          | PRINT LPAR Expr RPAR
   50          | PRINT LPAR STRLIT RPAR
   51          | Error_1

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA BLANKID ASSIGN PARSEINT LPAR Error_1 RPAR

   54 FuncInvocation: ID LPAR RPAR
   55               | ID LPAR Expr RPAR
   56               | ID LPAR Expr FuncInvocation_rep RPAR

   57 FuncInvocation_rep: COMMA Expr
   58                   | COMMA Expr FuncInvocation_rep

   59 FuncInvocation: ID LPAR Error_1 RPAR

   60 Expr: Expr OR Expr
   61     | Expr AND Expr
   62     | Expr LT Expr
   63     | Expr GT Expr
   64     | Expr LE Expr
   65     | Expr GE Expr
   66     | Expr EQ Expr
   67     | Expr NE Expr
   68     | Expr PLUS Expr
   69     | Expr MINUS Expr
   70     | Expr STAR Expr
   71     | Expr DIV Expr
   72     | Expr MOD Expr
   73     | NOT Expr
   74     | MINUS Expr
   75     | PLUS Expr
   76     | INTLIT
   77     | REALLIT
   78     | ID
   79     | FuncInvocation
   80     | LPAR Expr RPAR
   81     | LPAR Error_1 RPAR

   82 Error_1: error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 82
    PACKAGE (258) 1 2
    ID <node> (259) 1 2 9 11 16 17 18 19 21 22 23 24 33 52 53 54 55 56 59 78
    SEMICOLON (260) 1 2 3 4 5 6 8 27 28 29 30 31 32 36 37 42
    VAR (261) 7 8
    LPAR (262) 8 16 17 18 19 49 50 52 53 54 55 56 59 80 81
    RPAR (263) 8 16 17 18 19 49 50 52 53 54 55 56 59 80 81
    COMMA (264) 11 23 24 52 53 57 58
    INT (265) 12
    FLOAT32 (266) 13
    BOOL (267) 14
    STRING (268) 15
    RBRACE (269) 25 26 34 35 38 39 43 44
    LBRACE (270) 25 26 34 35 38 39 43 44
    ASSIGN (271) 33 52 53
    IF (272) 38
    ELSE (273) 39
    RETURN (274) 45 46
    FOR (275) 43 44
    PRINT (276) 49 50
    STRLIT <node> (277) 50
    BLANKID (278) 52 53
    PARSEINT (279) 52 53
    CMDARGS (280) 52
    LSQ (281) 52
    RSQ (282) 52
    OR (283) 60
    AND (284) 61
    LT (285) 62
    GT (286) 63
    EQ (287) 66
    NE (288) 67
    LE (289) 64
    GE (290) 65
    PLUS (291) 68 75
    MINUS (292) 69 74
    STAR (293) 70
    DIV (294) 71
    MOD (295) 72
    NOT (296) 73
    INTLIT <node> (297) 76
    REALLIT <node> (298) 77
    FUNC (299) 16 17 18 19
    UNARY (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program <node> (47)
        on left: 1 2
        on right: 0
    Declarations <node> (48)
        on left: 3 4 5 6
        on right: 1 4 6
    VarDeclaration <node> (49)
        on left: 7 8
        on right: 3 4 28 31
    VarSpec <node> (50)
        on left: 9
        on right: 7 8
    VarSpec_1 <node> (51)
        on left: 10 11
        on right: 9 11
    Type <node> (52)
        on left: 12 13 14 15
        on right: 10 18 19 21 22 23 24
    FuncHeader <node> (53)
        on left: 16 17 18 19
        on right: 20
    FuncDeclaration <node> (54)
        on left: 20
        on right: 5 6
    Parameters <node> (55)
        on left: 21 22
        on right: 17 19
    Parameters_1 <node> (56)
        on left: 23 24
        on right: 22 24
    FuncBody <node> (57)
        on left: 25 26
        on right: 20
    VarsAndStatements <node> (58)
        on left: 27 28 29 30 31 32
        on right: 26 30 31 32
    Statement <node> (59)
        on left: 33 34 35 38 43 44 45 46 47 48 49 50 51
        on right: 29 32 36 37 42
    Statement_1 <node> (60)
        on left: 36 37
        on right: 35 37
    OPT_ELSE <node> (61)
        on left: 39 40
        on right: 38
    Statement_rep <node> (62)
        on left: 41 42
        on right: 38 39 42 43 44
    ParseArgs <node> (63)
        on left: 52 53
        on right: 48
    FuncInvocation <node> (64)
        on left: 54 55 56 59
        on right: 47 79
    FuncInvocation_rep <node> (65)
        on left: 57 58
        on right: 56 58
    Expr <node> (66)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 33 38 44 46 49 52 55 56 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 80
    Error_1 (67)
        on left: 82
        on right: 51 53 59 81


State 0

    0 $accept: • Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE • ID SEMICOLON Declarations
    2        | PACKAGE • ID SEMICOLON

    ID  shift, and go to state 3


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID • SEMICOLON Declarations
    2        | PACKAGE ID • SEMICOLON

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end •

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON • Declarations
    2        | PACKAGE ID SEMICOLON •

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 2 (Program)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncHeader       go to state 10
    FuncDeclaration  go to state 11


State 6

    7 VarDeclaration: VAR • VarSpec
    8               | VAR • LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 12
    LPAR  shift, and go to state 13

    VarSpec  go to state 14


State 7

   16 FuncHeader: FUNC • ID LPAR RPAR
   17           | FUNC • ID LPAR Parameters RPAR
   18           | FUNC • ID LPAR RPAR Type
   19           | FUNC • ID LPAR Parameters RPAR Type

    ID  shift, and go to state 15


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations •

    $default  reduce using rule 1 (Program)


State 9

    3 Declarations: VarDeclaration • SEMICOLON
    4             | VarDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 10

   20 FuncDeclaration: FuncHeader • FuncBody

    LBRACE  shift, and go to state 17

    FuncBody  go to state 18


State 11

    5 Declarations: FuncDeclaration • SEMICOLON
    6             | FuncDeclaration • SEMICOLON Declarations

    SEMICOLON  shift, and go to state 19


State 12

    9 VarSpec: ID • VarSpec_1

    COMMA    shift, and go to state 20
    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    VarSpec_1  go to state 25
    Type       go to state 26


State 13

    8 VarDeclaration: VAR LPAR • VarSpec SEMICOLON RPAR

    ID  shift, and go to state 12

    VarSpec  go to state 27


State 14

    7 VarDeclaration: VAR VarSpec •

    $default  reduce using rule 7 (VarDeclaration)


State 15

   16 FuncHeader: FUNC ID • LPAR RPAR
   17           | FUNC ID • LPAR Parameters RPAR
   18           | FUNC ID • LPAR RPAR Type
   19           | FUNC ID • LPAR Parameters RPAR Type

    LPAR  shift, and go to state 28


State 16

    3 Declarations: VarDeclaration SEMICOLON •
    4             | VarDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 3 (Declarations)

    Declarations     go to state 29
    VarDeclaration   go to state 9
    FuncHeader       go to state 10
    FuncDeclaration  go to state 11


State 17

   25 FuncBody: LBRACE • RBRACE
   26         | LBRACE • VarsAndStatements RBRACE

    error      shift, and go to state 30
    ID         shift, and go to state 31
    SEMICOLON  shift, and go to state 32
    VAR        shift, and go to state 6
    RBRACE     shift, and go to state 33
    LBRACE     shift, and go to state 34
    IF         shift, and go to state 35
    RETURN     shift, and go to state 36
    FOR        shift, and go to state 37
    PRINT      shift, and go to state 38

    VarDeclaration     go to state 39
    VarsAndStatements  go to state 40
    Statement          go to state 41
    ParseArgs          go to state 42
    FuncInvocation     go to state 43
    Error_1            go to state 44


State 18

   20 FuncDeclaration: FuncHeader FuncBody •

    $default  reduce using rule 20 (FuncDeclaration)


State 19

    5 Declarations: FuncDeclaration SEMICOLON •
    6             | FuncDeclaration SEMICOLON • Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 5 (Declarations)

    Declarations     go to state 45
    VarDeclaration   go to state 9
    FuncHeader       go to state 10
    FuncDeclaration  go to state 11


State 20

   11 VarSpec_1: COMMA • ID VarSpec_1

    ID  shift, and go to state 46


State 21

   12 Type: INT •

    $default  reduce using rule 12 (Type)


State 22

   13 Type: FLOAT32 •

    $default  reduce using rule 13 (Type)


State 23

   14 Type: BOOL •

    $default  reduce using rule 14 (Type)


State 24

   15 Type: STRING •

    $default  reduce using rule 15 (Type)


State 25

    9 VarSpec: ID VarSpec_1 •

    $default  reduce using rule 9 (VarSpec)


State 26

   10 VarSpec_1: Type •

    $default  reduce using rule 10 (VarSpec_1)


State 27

    8 VarDeclaration: VAR LPAR VarSpec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 47


State 28

   16 FuncHeader: FUNC ID LPAR • RPAR
   17           | FUNC ID LPAR • Parameters RPAR
   18           | FUNC ID LPAR • RPAR Type
   19           | FUNC ID LPAR • Parameters RPAR Type

    ID    shift, and go to state 48
    RPAR  shift, and go to state 49

    Parameters  go to state 50


State 29

    4 Declarations: VarDeclaration SEMICOLON Declarations •

    $default  reduce using rule 4 (Declarations)


State 30

   82 Error_1: error •

    $default  reduce using rule 82 (Error_1)


State 31

   33 Statement: ID • ASSIGN Expr
   52 ParseArgs: ID • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID • COMMA BLANKID ASSIGN PARSEINT LPAR Error_1 RPAR
   54 FuncInvocation: ID • LPAR RPAR
   55               | ID • LPAR Expr RPAR
   56               | ID • LPAR Expr FuncInvocation_rep RPAR
   59               | ID • LPAR Error_1 RPAR

    LPAR    shift, and go to state 51
    COMMA   shift, and go to state 52
    ASSIGN  shift, and go to state 53


State 32

   27 VarsAndStatements: SEMICOLON •
   30                  | SEMICOLON • VarsAndStatements

    error      shift, and go to state 30
    ID         shift, and go to state 31
    SEMICOLON  shift, and go to state 32
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 34
    IF         shift, and go to state 35
    RETURN     shift, and go to state 36
    FOR        shift, and go to state 37
    PRINT      shift, and go to state 38

    RBRACE  reduce using rule 27 (VarsAndStatements)

    VarDeclaration     go to state 39
    VarsAndStatements  go to state 54
    Statement          go to state 41
    ParseArgs          go to state 42
    FuncInvocation     go to state 43
    Error_1            go to state 44


State 33

   25 FuncBody: LBRACE RBRACE •

    $default  reduce using rule 25 (FuncBody)


State 34

   34 Statement: LBRACE • RBRACE
   35          | LBRACE • Statement_1 RBRACE

    error   shift, and go to state 30
    ID      shift, and go to state 31
    RBRACE  shift, and go to state 55
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    Statement       go to state 56
    Statement_1     go to state 57
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 35

   38 Statement: IF • Expr LBRACE Statement_rep RBRACE OPT_ELSE

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 66


State 36

   45 Statement: RETURN •
   46          | RETURN • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    $default  reduce using rule 45 (Statement)

    FuncInvocation  go to state 65
    Expr            go to state 67


State 37

   43 Statement: FOR • LBRACE Statement_rep RBRACE
   44          | FOR • Expr LBRACE Statement_rep RBRACE

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    LBRACE   shift, and go to state 68
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 69


State 38

   49 Statement: PRINT • LPAR Expr RPAR
   50          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 70


State 39

   28 VarsAndStatements: VarDeclaration • SEMICOLON
   31                  | VarDeclaration • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 71


State 40

   26 FuncBody: LBRACE VarsAndStatements • RBRACE

    RBRACE  shift, and go to state 72


State 41

   29 VarsAndStatements: Statement • SEMICOLON
   32                  | Statement • SEMICOLON VarsAndStatements

    SEMICOLON  shift, and go to state 73


State 42

   48 Statement: ParseArgs •

    $default  reduce using rule 48 (Statement)


State 43

   47 Statement: FuncInvocation •

    $default  reduce using rule 47 (Statement)


State 44

   51 Statement: Error_1 •

    $default  reduce using rule 51 (Statement)


State 45

    6 Declarations: FuncDeclaration SEMICOLON Declarations •

    $default  reduce using rule 6 (Declarations)


State 46

   11 VarSpec_1: COMMA ID • VarSpec_1

    COMMA    shift, and go to state 20
    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    VarSpec_1  go to state 74
    Type       go to state 26


State 47

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON • RPAR

    RPAR  shift, and go to state 75


State 48

   21 Parameters: ID • Type
   22           | ID • Type Parameters_1

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    Type  go to state 76


State 49

   16 FuncHeader: FUNC ID LPAR RPAR •
   18           | FUNC ID LPAR RPAR • Type

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    $default  reduce using rule 16 (FuncHeader)

    Type  go to state 77


State 50

   17 FuncHeader: FUNC ID LPAR Parameters • RPAR
   19           | FUNC ID LPAR Parameters • RPAR Type

    RPAR  shift, and go to state 78


State 51

   54 FuncInvocation: ID LPAR • RPAR
   55               | ID LPAR • Expr RPAR
   56               | ID LPAR • Expr FuncInvocation_rep RPAR
   59               | ID LPAR • Error_1 RPAR

    error    shift, and go to state 30
    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    RPAR     shift, and go to state 79
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 80
    Error_1         go to state 81


State 52

   52 ParseArgs: ID COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA • BLANKID ASSIGN PARSEINT LPAR Error_1 RPAR

    BLANKID  shift, and go to state 82


State 53

   33 Statement: ID ASSIGN • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 83


State 54

   30 VarsAndStatements: SEMICOLON VarsAndStatements •

    $default  reduce using rule 30 (VarsAndStatements)


State 55

   34 Statement: LBRACE RBRACE •

    $default  reduce using rule 34 (Statement)


State 56

   36 Statement_1: Statement • SEMICOLON
   37            | Statement • SEMICOLON Statement_1

    SEMICOLON  shift, and go to state 84


State 57

   35 Statement: LBRACE Statement_1 • RBRACE

    RBRACE  shift, and go to state 85


State 58

   54 FuncInvocation: ID • LPAR RPAR
   55               | ID • LPAR Expr RPAR
   56               | ID • LPAR Expr FuncInvocation_rep RPAR
   59               | ID • LPAR Error_1 RPAR
   78 Expr: ID •

    LPAR  shift, and go to state 51

    $default  reduce using rule 78 (Expr)


State 59

   80 Expr: LPAR • Expr RPAR
   81     | LPAR • Error_1 RPAR

    error    shift, and go to state 30
    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 86
    Error_1         go to state 87


State 60

   75 Expr: PLUS • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 88


State 61

   74 Expr: MINUS • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 89


State 62

   73 Expr: NOT • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 90


State 63

   76 Expr: INTLIT •

    $default  reduce using rule 76 (Expr)


State 64

   77 Expr: REALLIT •

    $default  reduce using rule 77 (Expr)


State 65

   79 Expr: FuncInvocation •

    $default  reduce using rule 79 (Expr)


State 66

   38 Statement: IF Expr • LBRACE Statement_rep RBRACE OPT_ELSE
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LBRACE  shift, and go to state 91
    OR      shift, and go to state 92
    AND     shift, and go to state 93
    LT      shift, and go to state 94
    GT      shift, and go to state 95
    EQ      shift, and go to state 96
    NE      shift, and go to state 97
    LE      shift, and go to state 98
    GE      shift, and go to state 99
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104


State 67

   46 Statement: RETURN Expr •
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 46 (Statement)


State 68

   43 Statement: FOR LBRACE • Statement_rep RBRACE

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 41 (Statement_rep)

    Statement       go to state 105
    Statement_rep   go to state 106
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 69

   44 Statement: FOR Expr • LBRACE Statement_rep RBRACE
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LBRACE  shift, and go to state 107
    OR      shift, and go to state 92
    AND     shift, and go to state 93
    LT      shift, and go to state 94
    GT      shift, and go to state 95
    EQ      shift, and go to state 96
    NE      shift, and go to state 97
    LE      shift, and go to state 98
    GE      shift, and go to state 99
    PLUS    shift, and go to state 100
    MINUS   shift, and go to state 101
    STAR    shift, and go to state 102
    DIV     shift, and go to state 103
    MOD     shift, and go to state 104


State 70

   49 Statement: PRINT LPAR • Expr RPAR
   50          | PRINT LPAR • STRLIT RPAR

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    STRLIT   shift, and go to state 108
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 109


State 71

   28 VarsAndStatements: VarDeclaration SEMICOLON •
   31                  | VarDeclaration SEMICOLON • VarsAndStatements

    error      shift, and go to state 30
    ID         shift, and go to state 31
    SEMICOLON  shift, and go to state 32
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 34
    IF         shift, and go to state 35
    RETURN     shift, and go to state 36
    FOR        shift, and go to state 37
    PRINT      shift, and go to state 38

    RBRACE  reduce using rule 28 (VarsAndStatements)

    VarDeclaration     go to state 39
    VarsAndStatements  go to state 110
    Statement          go to state 41
    ParseArgs          go to state 42
    FuncInvocation     go to state 43
    Error_1            go to state 44


State 72

   26 FuncBody: LBRACE VarsAndStatements RBRACE •

    $default  reduce using rule 26 (FuncBody)


State 73

   29 VarsAndStatements: Statement SEMICOLON •
   32                  | Statement SEMICOLON • VarsAndStatements

    error      shift, and go to state 30
    ID         shift, and go to state 31
    SEMICOLON  shift, and go to state 32
    VAR        shift, and go to state 6
    LBRACE     shift, and go to state 34
    IF         shift, and go to state 35
    RETURN     shift, and go to state 36
    FOR        shift, and go to state 37
    PRINT      shift, and go to state 38

    RBRACE  reduce using rule 29 (VarsAndStatements)

    VarDeclaration     go to state 39
    VarsAndStatements  go to state 111
    Statement          go to state 41
    ParseArgs          go to state 42
    FuncInvocation     go to state 43
    Error_1            go to state 44


State 74

   11 VarSpec_1: COMMA ID VarSpec_1 •

    $default  reduce using rule 11 (VarSpec_1)


State 75

    8 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR •

    $default  reduce using rule 8 (VarDeclaration)


State 76

   21 Parameters: ID Type •
   22           | ID Type • Parameters_1

    COMMA  shift, and go to state 112

    $default  reduce using rule 21 (Parameters)

    Parameters_1  go to state 113


State 77

   18 FuncHeader: FUNC ID LPAR RPAR Type •

    $default  reduce using rule 18 (FuncHeader)


State 78

   17 FuncHeader: FUNC ID LPAR Parameters RPAR •
   19           | FUNC ID LPAR Parameters RPAR • Type

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    $default  reduce using rule 17 (FuncHeader)

    Type  go to state 114


State 79

   54 FuncInvocation: ID LPAR RPAR •

    $default  reduce using rule 54 (FuncInvocation)


State 80

   55 FuncInvocation: ID LPAR Expr • RPAR
   56               | ID LPAR Expr • FuncInvocation_rep RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RPAR   shift, and go to state 115
    COMMA  shift, and go to state 116
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    FuncInvocation_rep  go to state 117


State 81

   59 FuncInvocation: ID LPAR Error_1 • RPAR

    RPAR  shift, and go to state 118


State 82

   52 ParseArgs: ID COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA BLANKID • ASSIGN PARSEINT LPAR Error_1 RPAR

    ASSIGN  shift, and go to state 119


State 83

   33 Statement: ID ASSIGN Expr •
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 33 (Statement)


State 84

   36 Statement_1: Statement SEMICOLON •
   37            | Statement SEMICOLON • Statement_1

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 36 (Statement_1)

    Statement       go to state 56
    Statement_1     go to state 120
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 85

   35 Statement: LBRACE Statement_1 RBRACE •

    $default  reduce using rule 35 (Statement)


State 86

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   80     | LPAR Expr • RPAR

    RPAR   shift, and go to state 121
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104


State 87

   81 Expr: LPAR Error_1 • RPAR

    RPAR  shift, and go to state 122


State 88

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   75     | PLUS Expr •

    $default  reduce using rule 75 (Expr)


State 89

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   74     | MINUS Expr •

    $default  reduce using rule 74 (Expr)


State 90

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   73     | NOT Expr •

    $default  reduce using rule 73 (Expr)


State 91

   38 Statement: IF Expr LBRACE • Statement_rep RBRACE OPT_ELSE

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 41 (Statement_rep)

    Statement       go to state 105
    Statement_rep   go to state 123
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 92

   60 Expr: Expr OR • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 124


State 93

   61 Expr: Expr AND • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 125


State 94

   62 Expr: Expr LT • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 126


State 95

   63 Expr: Expr GT • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 127


State 96

   66 Expr: Expr EQ • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 128


State 97

   67 Expr: Expr NE • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 129


State 98

   64 Expr: Expr LE • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 130


State 99

   65 Expr: Expr GE • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 131


State 100

   68 Expr: Expr PLUS • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 132


State 101

   69 Expr: Expr MINUS • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 133


State 102

   70 Expr: Expr STAR • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 134


State 103

   71 Expr: Expr DIV • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 135


State 104

   72 Expr: Expr MOD • Expr

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 136


State 105

   42 Statement_rep: Statement • SEMICOLON Statement_rep

    SEMICOLON  shift, and go to state 137


State 106

   43 Statement: FOR LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 138


State 107

   44 Statement: FOR Expr LBRACE • Statement_rep RBRACE

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 41 (Statement_rep)

    Statement       go to state 105
    Statement_rep   go to state 139
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 108

   50 Statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 140


State 109

   49 Statement: PRINT LPAR Expr • RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RPAR   shift, and go to state 141
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104


State 110

   31 VarsAndStatements: VarDeclaration SEMICOLON VarsAndStatements •

    $default  reduce using rule 31 (VarsAndStatements)


State 111

   32 VarsAndStatements: Statement SEMICOLON VarsAndStatements •

    $default  reduce using rule 32 (VarsAndStatements)


State 112

   23 Parameters_1: COMMA • ID Type
   24             | COMMA • ID Type Parameters_1

    ID  shift, and go to state 142


State 113

   22 Parameters: ID Type Parameters_1 •

    $default  reduce using rule 22 (Parameters)


State 114

   19 FuncHeader: FUNC ID LPAR Parameters RPAR Type •

    $default  reduce using rule 19 (FuncHeader)


State 115

   55 FuncInvocation: ID LPAR Expr RPAR •

    $default  reduce using rule 55 (FuncInvocation)


State 116

   57 FuncInvocation_rep: COMMA • Expr
   58                   | COMMA • Expr FuncInvocation_rep

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 143


State 117

   56 FuncInvocation: ID LPAR Expr FuncInvocation_rep • RPAR

    RPAR  shift, and go to state 144


State 118

   59 FuncInvocation: ID LPAR Error_1 RPAR •

    $default  reduce using rule 59 (FuncInvocation)


State 119

   52 ParseArgs: ID COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA BLANKID ASSIGN • PARSEINT LPAR Error_1 RPAR

    PARSEINT  shift, and go to state 145


State 120

   37 Statement_1: Statement SEMICOLON Statement_1 •

    $default  reduce using rule 37 (Statement_1)


State 121

   80 Expr: LPAR Expr RPAR •

    $default  reduce using rule 80 (Expr)


State 122

   81 Expr: LPAR Error_1 RPAR •

    $default  reduce using rule 81 (Expr)


State 123

   38 Statement: IF Expr LBRACE Statement_rep • RBRACE OPT_ELSE

    RBRACE  shift, and go to state 146


State 124

   60 Expr: Expr • OR Expr
   60     | Expr OR Expr •
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 60 (Expr)


State 125

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   61     | Expr AND Expr •
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 61 (Expr)


State 126

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   62     | Expr LT Expr •
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 62 (Expr)


State 127

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   63     | Expr GT Expr •
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 63 (Expr)


State 128

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   66     | Expr EQ Expr •
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 66 (Expr)


State 129

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   67     | Expr NE Expr •
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 67 (Expr)


State 130

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   64     | Expr LE Expr •
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 64 (Expr)


State 131

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   65     | Expr GE Expr •
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 65 (Expr)


State 132

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   68     | Expr PLUS Expr •
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 68 (Expr)


State 133

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   69     | Expr MINUS Expr •
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    STAR  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 69 (Expr)


State 134

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   70     | Expr STAR Expr •
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    $default  reduce using rule 70 (Expr)


State 135

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   71     | Expr DIV Expr •
   72     | Expr • MOD Expr

    $default  reduce using rule 71 (Expr)


State 136

   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr
   72     | Expr MOD Expr •

    $default  reduce using rule 72 (Expr)


State 137

   42 Statement_rep: Statement SEMICOLON • Statement_rep

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 41 (Statement_rep)

    Statement       go to state 105
    Statement_rep   go to state 147
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 138

   43 Statement: FOR LBRACE Statement_rep RBRACE •

    $default  reduce using rule 43 (Statement)


State 139

   44 Statement: FOR Expr LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 148


State 140

   50 Statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 50 (Statement)


State 141

   49 Statement: PRINT LPAR Expr RPAR •

    $default  reduce using rule 49 (Statement)


State 142

   23 Parameters_1: COMMA ID • Type
   24             | COMMA ID • Type Parameters_1

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    Type  go to state 149


State 143

   57 FuncInvocation_rep: COMMA Expr •
   58                   | COMMA Expr • FuncInvocation_rep
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    COMMA  shift, and go to state 116
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104

    $default  reduce using rule 57 (FuncInvocation_rep)

    FuncInvocation_rep  go to state 150


State 144

   56 FuncInvocation: ID LPAR Expr FuncInvocation_rep RPAR •

    $default  reduce using rule 56 (FuncInvocation)


State 145

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA BLANKID ASSIGN PARSEINT • LPAR Error_1 RPAR

    LPAR  shift, and go to state 151


State 146

   38 Statement: IF Expr LBRACE Statement_rep RBRACE • OPT_ELSE

    ELSE  shift, and go to state 152

    $default  reduce using rule 40 (OPT_ELSE)

    OPT_ELSE  go to state 153


State 147

   42 Statement_rep: Statement SEMICOLON Statement_rep •

    $default  reduce using rule 42 (Statement_rep)


State 148

   44 Statement: FOR Expr LBRACE Statement_rep RBRACE •

    $default  reduce using rule 44 (Statement)


State 149

   23 Parameters_1: COMMA ID Type •
   24             | COMMA ID Type • Parameters_1

    COMMA  shift, and go to state 112

    $default  reduce using rule 23 (Parameters_1)

    Parameters_1  go to state 154


State 150

   58 FuncInvocation_rep: COMMA Expr FuncInvocation_rep •

    $default  reduce using rule 58 (FuncInvocation_rep)


State 151

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ Expr RSQ RPAR
   53          | ID COMMA BLANKID ASSIGN PARSEINT LPAR • Error_1 RPAR

    error    shift, and go to state 30
    CMDARGS  shift, and go to state 155

    Error_1  go to state 156


State 152

   39 OPT_ELSE: ELSE • LBRACE Statement_rep RBRACE

    LBRACE  shift, and go to state 157


State 153

   38 Statement: IF Expr LBRACE Statement_rep RBRACE OPT_ELSE •

    $default  reduce using rule 38 (Statement)


State 154

   24 Parameters_1: COMMA ID Type Parameters_1 •

    $default  reduce using rule 24 (Parameters_1)


State 155

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 158


State 156

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR Error_1 • RPAR

    RPAR  shift, and go to state 159


State 157

   39 OPT_ELSE: ELSE LBRACE • Statement_rep RBRACE

    error   shift, and go to state 30
    ID      shift, and go to state 31
    LBRACE  shift, and go to state 34
    IF      shift, and go to state 35
    RETURN  shift, and go to state 36
    FOR     shift, and go to state 37
    PRINT   shift, and go to state 38

    RBRACE  reduce using rule 41 (Statement_rep)

    Statement       go to state 105
    Statement_rep   go to state 160
    ParseArgs       go to state 42
    FuncInvocation  go to state 43
    Error_1         go to state 44


State 158

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • Expr RSQ RPAR

    ID       shift, and go to state 58
    LPAR     shift, and go to state 59
    PLUS     shift, and go to state 60
    MINUS    shift, and go to state 61
    NOT      shift, and go to state 62
    INTLIT   shift, and go to state 63
    REALLIT  shift, and go to state 64

    FuncInvocation  go to state 65
    Expr            go to state 161


State 159

   53 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR Error_1 RPAR •

    $default  reduce using rule 53 (ParseArgs)


State 160

   39 OPT_ELSE: ELSE LBRACE Statement_rep • RBRACE

    RBRACE  shift, and go to state 162


State 161

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr • RSQ RPAR
   60 Expr: Expr • OR Expr
   61     | Expr • AND Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | Expr • LE Expr
   65     | Expr • GE Expr
   66     | Expr • EQ Expr
   67     | Expr • NE Expr
   68     | Expr • PLUS Expr
   69     | Expr • MINUS Expr
   70     | Expr • STAR Expr
   71     | Expr • DIV Expr
   72     | Expr • MOD Expr

    RSQ    shift, and go to state 163
    OR     shift, and go to state 92
    AND    shift, and go to state 93
    LT     shift, and go to state 94
    GT     shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    STAR   shift, and go to state 102
    DIV    shift, and go to state 103
    MOD    shift, and go to state 104


State 162

   39 OPT_ELSE: ELSE LBRACE Statement_rep RBRACE •

    $default  reduce using rule 39 (OPT_ELSE)


State 163

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ • RPAR

    RPAR  shift, and go to state 164


State 164

   52 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR •

    $default  reduce using rule 52 (ParseArgs)
